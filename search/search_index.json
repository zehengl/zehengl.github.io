{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Blog","text":""},{"location":"uses/","title":"Uses","text":"<p>Tech that I am using and used before</p>"},{"location":"uses/#current-setup","title":"Current Setup","text":"<p>Phone</p> <p> Apple iPhone 13 Pro</p> <p>Color Palettes</p> <p> Dracula (terminals)</p> <p> Oceanic Next (code editors)</p> <p>macOS</p> <p> Apple Mac mini (M1, 2020)</p> <p> BenQ PD2500Q 25-inch QHD Designer Monitor</p> <p> Keychron K2 Version 2</p> <p> Logitech Logitech MX Master 3S Performance Wireless Mouse</p> <p> Logitech StreamCam Plus HD Webcam</p> <p>Windows</p> <p> ThinkPad T14 Gen 2</p> <p> Dell Inspiron 5480</p> <p> Dell 24 Monitor - SE2419HR</p> <p> Keychron K1 Version 1</p> <p> Logitech MX Anywhere 3 Compact Performance Mouse</p> <p> Logitech C920S Pro 1080p HD Webcam</p>"},{"location":"uses/#past-gears","title":"Past Gears","text":"<p>Computer</p> <p>\u795e\u821f\u627f\u8fd0 B740G</p> <p>Compaq Presario CQ35</p> <p>Apple MacBook Pro (13-inch, Early 2011)</p> <p>Apple MacBook Pro (Retina, 15-inch, Mid 2014)</p> <p>Lenovo Ideapad 120s (11)</p> <p>Monitor</p> <p>Apple 27-inch LED Cinema Display</p> <p>Apple 27-inch Thunderbolt Display</p> <p>Dell Ultrasharp 2007fp 20-inch</p> <p>Accessory</p> <p>Logitech G700s Rechargeable Gaming Mouse</p> <p>Logitech M535 Bluetooth Mouse</p> <p>Phone</p> <p>Apple iPhone 3GS</p> <p>Apple iPhone 5</p> <p>Apple iPhone 6</p> <p>Apple iPhone 7</p> <p>Samsung Galaxy Note9</p> <p>Samsung Galaxy S10</p>"},{"location":"agile-scrum-note-01/","title":"Agile Scrum Note 01","text":"<p>Introduction</p>"},{"location":"agile-scrum-note-01/#traditional-development","title":"Traditional Development","text":"<ul> <li>Analysis</li> <li>Design</li> <li>Coding</li> <li>Testing</li> <li>Deploy</li> <li>logically sound but assumes predictability, difficult to react to unforeseen changes</li> </ul>"},{"location":"agile-scrum-note-01/#agile-manifesto","title":"Agile Manifesto","text":"<ul> <li>Individuals and interactions over processes and tools</li> <li>Working software over comprehensive documentation</li> <li>Customer collaboration over contract negotiation</li> <li>Responding to change over following a plan</li> </ul>"},{"location":"agile-scrum-note-01/#principles-behind-the-agile-manifesto","title":"Principles behind the Agile Manifesto","text":"<ol> <li>Our highest priority is to satisfy the customer through early and continuous delivery of valuable software</li> <li>Welcome changing requirements, even late in development. Agile processes harness change for the customer's competitive advantage</li> <li>Deliver working software frequently, from a couple of weeks to a couple of months, with a preference to the shorter timescale</li> <li>Business people and developers must work together daily during the project</li> <li>Build projects around motivated individuals. Give them the environment and support they need, and trust them to get the job done.</li> <li>The most efficient and effective method of conveying information to and within a development team is face- to-face conversation</li> <li>Working software is the primary measure of progress</li> <li>Agile processes promote sustainable development. Sponsors, developers, and users should be able to maintain a constant pace indefinitely</li> <li>Continuous attention to tech. excellence and good design enhances agility</li> <li>Simplicity (the art of maximizing the amount of work not done)is essential</li> <li>The best architectures, requirements, and designs emerge from self-organizing teams</li> <li>At regular intervals, the team reflects on how to become more effective, then tunes and adjusts its behavior accordingly</li> </ol>"},{"location":"agile-scrum-note-01/#apm-agile-project-management-framework","title":"APM (Agile Project Management) Framework","text":"<ul> <li>Envision</li> </ul> <p>Determine the product vision and project scope, the project community, and how the team will work together</p> <ul> <li>Speculate</li> </ul> <p>Develop a feature-based release, milestone, and iteration plan to deliver on the vision</p> <ul> <li>Explore</li> </ul> <p>Deliver tested features in a short timeframe, constantly seeking to reduce the risk and uncertainty of the project</p> <ul> <li>Adapt</li> </ul> <p>Review the delivered results, the current situation, and the team's performance, and adapt as necessary</p> <ul> <li>Close</li> </ul> <p>Conclude the project, pass along key learning's, and celebrate</p>"},{"location":"agile-scrum-note-01/#scrum","title":"Scrum","text":"<ul> <li>a methodology for software development that adheres to Agile principles of iterative and incremental development</li> </ul>"},{"location":"agile-scrum-note-02/","title":"Agile Scrum Note 02","text":"<p>Popular Agile methodologies</p>"},{"location":"agile-scrum-note-02/#crystal","title":"Crystal","text":"<p>lightweight approach</p> <ul> <li>Learn (Shu), Collect (Ha), Invent/Blend (Ri) techniques</li> <li>Seven principle<ul> <li>Frequent Delivery</li> <li>Reflective Improvement</li> <li>Close(Osmotic) Communication</li> <li>Personal Safety</li> <li>Focus</li> <li>Easy access to expert users</li> <li>Technical environment</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-02/#extreme-programming-xp","title":"Extreme Programming (XP)","text":"<p>lightweight approach</p> <ul> <li>A system of practices that a community of software developers is evolving to address the problem of quickly delivering quality software, and then evolving it to meet business problems</li> <li>Take proven practices to the extreme<ul> <li>If testing is good, let everybody test all the time</li> <li>If code reviews are good, review all the time</li> <li>If design is good, re-factor all the time</li> <li>If integration is good, integrate all the time</li> <li>If simplicity is good, do the simplest thing that could possibly work</li> <li>If short iterations are good, make them as short as possible</li> </ul> </li> <li>Values<ul> <li>Communication<ul> <li>Among the team</li> <li>Between the team and customer</li> </ul> </li> <li>Simplicity<ul> <li>Avoid over-engineering</li> <li>Focus on unlocking the value fast</li> </ul> </li> <li>Feedback<ul> <li>Helps the team steer in the right direction</li> </ul> </li> <li>Re-assures the customer about what the team is building</li> <li>Courage<ul> <li>To follow the right practices, standards</li> <li>Arises out of the confidence that basic hygiene is in place</li> </ul> </li> </ul> </li> <li>Practices<ul> <li>The Planning Game</li> <li>Small releases</li> <li>Metaphor</li> <li>Simple design</li> <li>Testing</li> <li>Refactoring</li> <li>Pair programming</li> <li>Collective code ownership</li> <li>Continuous integration</li> <li>40 hour week</li> <li>Onsite customer</li> <li>Coding standards</li> <li>Open workspace</li> <li>Daily schema migration</li> </ul> </li> <li>Benefits<ul> <li>Team<ul> <li>gets clear requirements</li> <li>makes technical decisions and follows best practices</li> <li>not over-worked</li> </ul> </li> <li>Customer<ul> <li>gets business value fast</li> <li>gets accurate feedback</li> <li>can make business decisions and implement changes faster</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-02/#dsdm-revised-version-atern","title":"DSDM (revised version, Atern)","text":"<p>heavy approach</p> <ul> <li>Basic concept<ul> <li>User involvement ensures the right business solution</li> <li>Requirements evolve, but timescale is fixed</li> <li>Early delivery enables early pay-back</li> <li>Implement the 80/20 rule</li> <li>Nothing is built perfectly first time</li> </ul> </li> <li>Principles<ul> <li>Focus on the business need</li> <li>Delivery on time</li> <li>Collaborate</li> <li>Never compromise on quality</li> <li>Build incrementally from firm foundations</li> <li>Develop iteratively</li> <li>Communicate continuously and clearly</li> <li>Demonstrate control</li> </ul> </li> <li>Five core techniques<ul> <li>Iterative development</li> <li>Time-boxing</li> <li>MoSCoW prioritization<ul> <li>Must</li> <li>Should</li> <li>Could</li> <li>Would</li> </ul> </li> <li>Facilitated workshops</li> <li>Modeling</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-02/#feature-driven-development-fdd","title":"Feature-Driven Development (FDD)","text":"<p>heavy approach</p> <ul> <li>Core Values<ul> <li>A system for building systems is essential</li> <li>Simple is better</li> <li>Process steps should be obviously valuable to team members</li> <li>Good processes move to the background</li> </ul> </li> <li>Six Roles<ul> <li>Project Manager</li> <li>Chief Architect</li> <li>Development Manager</li> <li>Chief Programmers</li> <li>Class Owners (aka Developers)</li> <li>Domain experts</li> </ul> </li> <li>Five Processes<ul> <li>Per project<ul> <li>Develop an overall model</li> <li>Build a features list</li> <li>Plan by feature</li> </ul> </li> <li>Per feature<ul> <li>Design by feature</li> <li>Build by feature</li> </ul> </li> </ul> </li> <li>Best for team with 10-250 developers, handy pool of talented workers, focus on good object model</li> </ul>"},{"location":"agile-scrum-note-02/#agile-unified-process","title":"Agile Unified Process","text":"<p>heavy approach</p> <ul> <li>Based on the Rational Unified Process (RUP), a method of managing Object Oriented Software Development<ul> <li>Develop iteratively \u2013 risk being the primary driver</li> <li>Manage requirements</li> <li>Employ component-based architecture</li> <li>Model software visually</li> <li>Continuously verify quality</li> <li>Control changes</li> </ul> </li> <li>Four Life-cycle phases<ul> <li>Inception</li> <li>Elaboration</li> <li>Construction</li> <li>Transition</li> </ul> </li> <li>Six Engineering disciplines<ul> <li>Business modeling</li> <li>Requirements</li> <li>Analysis and Design</li> <li>Implementation</li> <li>Test</li> <li>Deployment</li> </ul> </li> <li>Three Supporting disciplines<ul> <li>Environment management</li> <li>Configuration and Change management</li> <li>Project Management</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-02/#scrum","title":"Scrum","text":"<p>lightweight approach</p> <ul> <li>Lifecycle<ul> <li>Inputs from stakeholders</li> <li>Product backlog</li> <li>Sprint planning meeting</li> <li>Sprint backlog</li> <li>1-4 week sprint w. daily standup meeting</li> <li>Sprint review</li> <li>Sprint retrospective</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/","title":"Agile Scrum Note 03","text":"<p>Roles in Scrum</p>"},{"location":"agile-scrum-note-03/#stakeholders","title":"Stakeholders","text":"<ul> <li>Anybody whose interest is positively or negatively affected by the project OR who can exert an influence on the project</li> <li>Examples:<ul> <li>Team (Product Owner, Scrum Master, Developers)</li> <li>Management</li> <li>Customer</li> <li>End users</li> <li>Vendor/Contractors or external contributors</li> <li>People whose roles are \u201cdisplaced\u201d or \u201caffected\u201d</li> </ul> </li> <li>Chicken (involved) v.s. Pig (committed) roles<ul> <li>Responsible</li> <li>Accountable</li> <li>Concerned or Consulted</li> <li>Informed</li> </ul> </li> <li>Stakeholder management<ul> <li>Identifying stakeholders</li> <li>Assessing their knowledge and skills</li> <li>Analyze the project to ensure their needs are met</li> <li>Get and keep them involved by assigning them work, using them as experts, reporting to them, involving them in changes &amp; lessons learnt</li> <li>Getting their sign-off and formal acceptance during closure</li> <li>Establishing a \u201crapport\u201d with them!</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/#product-owner","title":"Product Owner","text":"<ul> <li>One of most critical roles in Scrum</li> <li>Part of the Scrum Team which includes Scrum Master and developers</li> <li>Provides direction to the team</li> <li>Role<ul> <li>Manage the Project\u2019s RoI and risk<ul> <li>Build business cases for projects and features</li> <li>Be cognizant of the risks</li> </ul> </li> <li>Take inputs from all stakeholders about what the team should do<ul> <li>And translate that into a backlog</li> </ul> </li> <li>Assign priority to items in the backlog</li> <li>Determine the release plan with help of the team</li> <li>Communicate the plan and roadmap with the external stakeholders</li> <li>Participate in the important Scrum meetings<ul> <li>Release and Sprint Planning</li> <li>Sprint Review</li> </ul> </li> <li>Be available for the team for<ul> <li>Clarifying requirements</li> <li>Answering questions</li> <li>Providing feedback</li> </ul> </li> </ul> </li> <li>Prioritization<ul> <li>Prioritizing requirements is an important role played by the Product Owner</li> <li>Prioritization is essential to ensure that the available time and budget is spent on delivering whatever is MOST valuable to the customer</li> <li>Possible justification for features:<ul> <li>New revenue</li> <li>Incremental revenue</li> <li>Operational efficiency</li> <li>Catch-up with competitor</li> </ul> </li> </ul> </li> <li>Cost-Benefit Analysis<ul> <li>Define the investment timeframe</li> <li>Forecast investment needed and recurring costs</li> <li>Forecast financial benefits</li> <li>Use time value of money and a combination of measures to decide<ul> <li>Pay-back period</li> <li>Net-present-value (NPV)</li> <li>Internal Rate of Return (IRR)</li> </ul> </li> </ul> </li> <li>Prioritization based on Value and Risk<ul> <li>HIGH value, LOW risk -&gt; DO FIRST</li> <li>HIGH value, HIGH risk -&gt; DO NEXT</li> <li>LOW value, HIGH risk -&gt; DO LAST</li> <li>LOW value, LOW risk -&gt; DON'T DO</li> </ul> </li> <li>Prioritizing requirements - MoSCoW<ul> <li>Must</li> <li>Should</li> <li>Could</li> <li>Won't</li> </ul> </li> <li>Prioritizing requirements \u2013 Kano model<ul> <li>Threshold / Must have\u2019s: those that must be present in the product for it to be successful</li> <li>Linear Feature: those features where customer satisfaction is correlated linearly with the quantity of the feature</li> <li>Exciters and Delighters: those features that provide great satisfaction, often adding a price premium to a product. But the lack of exciter or delighter will not decrease customer satisfaction below neutral</li> </ul> </li> <li>Prioritizing requirements \u2013 Relative weighting method<ul> <li>Considers both the positive benefit of the presence of a feature and the negative impact of its absence.</li> <li>Relies on expert judgment</li> <li>Collaboratively, but led by the product owner, the team assesses each feature being considered for the next release</li> <li>Each feature is assessed in terms of the benefits it will bring if implemented as well as the penalty that will be incurred if it is not implemented. The estimates of benefits and penalties are relative.</li> <li>A scale of 1\u20139 is used</li> <li>Developers rate the cost of producing the feature and the risk associated with producing it</li> <li>After entering the numbers for all the features, the relative priority for each feature is calculated by considering the percentage of the weighted feature desirability to each feature</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/#scrum-master","title":"Scrum Master","text":"<ul> <li>a critical role in the methodology</li> <li>helps the team achieve its goals by doing the following<ul> <li>Serving the Team</li> <li>Protecting the Team</li> <li>Supporting the team\u2019s use of Scrum</li> </ul> </li> <li>Remember<ul> <li>A project manager can become the scrum master, if he/she is working in a matrix organization doing the coordination role</li> <li>A line manager (one with reporting authority) ideally should NOT become the scrum master</li> </ul> </li> <li>DO<ul> <li>Serves the team + Facilitates the team\u2019s interactions \u2013 organizes the   Scrum rituals and other meetings + Removes the obstacles that are blocking the team</li> <li>Protects the team<ul> <li>From interference or disturbances</li> <li>Resolves conflicts</li> </ul> </li> <li>Supports the team\u2019s use of Scrum + Provides process guidance \u2013 shares best practices,   templates, etc. + Audits that the methodology is used correctly + May stand in for the Product Owner in his absence</li> </ul> </li> <li>DON'T<ul> <li>Manage the team</li> <li>Direct the team members</li> <li>Assign tasks</li> <li>Drive the team</li> <li>Make decisions on behalf of the team</li> <li>Over-rule the team members</li> <li>Direct product strategy</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/#developers","title":"Developers","text":"<ul> <li>Each member of the team is called a Developer: because they all contribute to the development of the product</li> <li>The team is SMALL (ideally 7 + or \u2013 2)</li> <li>The team is cross-functional: should contain all skills necessary to deliver value to the customer</li> <li>The team is self-managing</li> <li>Building a Scrum team<ul> <li>Team members will need to collaborate a lot more<ul> <li>Hence look for people who are good at communication skills and team working</li> </ul> </li> <li>You need some specialists but more generalists; e.g. Testers who can code</li> <li>You need a team that will make decisions and take responsibility for them<ul> <li>Promoting the right attitude</li> <li>Make it \u201csafe\u201d for people to make mistakes</li> </ul> </li> </ul> </li> <li>Building empowered teams<ul> <li>Is:<ul> <li>Responsibility and Ownership</li> <li>Working independently towards common objectives</li> <li>Understanding Why so that guidelines can be applied</li> <li>Weighing the impact of decisions on all affected stakeholders</li> <li>Making more trade-off\u2019s, not less</li> </ul> </li> <li>Is Not:<ul> <li>Throwing out the rule book</li> <li>Bypassing everyone who will say No</li> <li>Doing the \u201cFun Parts\u201d of someone else\u2019s job</li> <li>Freedom to unilaterally make decisions that impact others</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/#manager","title":"Manager","text":"<ul> <li>The Scrum life-cycle does NOT mention the \"manager\" at all</li> <li>The team in Scrum is supposed to be self-managing and is supported by the Scrum Master</li> <li>The team takes directions from the Product Owner in terms of work needed and prioritization</li> <li>So what does a functional or line manager do in Scrum? (Manager 2.0)<ul> <li>Play an active role in recruiting right members</li> <li>Be the mentor/coach for the team</li> <li>Bring the right culture into the team</li> <li>Help the team understand the big picture</li> <li>Develop skills - address training needs</li> <li>Administer rewards and recognition</li> <li>Protect the team in prioritization battles</li> <li>Deal with escalated issues</li> <li>Keep abreast of technology, industry and business trends and prepare for the future</li> <li>Represent the team at external forums</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-03/#special-roles","title":"Special roles","text":"<ul> <li>Architect<ul> <li>Decides about framework, model, etc</li> <li>Reviews designs, code</li> <li>Comes up with technical roadmap</li> </ul> </li> <li>Automated tester<ul> <li>Builds framework for test automation</li> <li>Builds suite of automated tests</li> <li>Helps moving towards test-driven-development (TDD)</li> </ul> </li> <li>Configuration Manager<ul> <li>Maintains cod repository</li> <li>Automates source code control, build and release processes</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-04/","title":"Agile Scrum Note 04","text":"<p>Details of the Scrum ceremonies</p>"},{"location":"agile-scrum-note-04/#time-boxing","title":"Time-boxing","text":"<ul> <li>Time-boxing is setting a fixed time limit to any activity and letting other characteristics such as scope vary.</li> <li>Scrum relies heavily on the principle of time-boxing. All meetings, ceremonies and project time windows are time-boxed. The sanctity of the time-box MUST be respected. This is a non- negotiable attribute of Scrum.</li> <li>Time-box can be any length of time [1 year, 1 month, 1 day, 1 hour]</li> <li>Control is achieved at the lowest level of time-boxing</li> <li>If you are running behind the schedule, postpone it to the next time-box</li> <li>Fixes the length of the iteration and the team determines how much functionality can be delivered in that fixed length of time</li> <li>Advantages<ul> <li>Focus<ul> <li>Helps one to focus his attention on the job at hand for the specified period of time</li> </ul> </li> <li>Increased productivity<ul> <li>Defining a fixed time period and working diligently in a focused manner on the identified task, helps one to work smarter and harder and get more done. It helps to get away with \"Parkinson's Law\" and \"Student Syndrome\"</li> </ul> </li> <li>Realization of time spent<ul> <li>Defining a fixed time period helps you identify how much work is done in the specific time and avoids the idling time</li> </ul> </li> <li>Time available<ul> <li>Helps one to be consciously aware of the time available to perform the task at hand</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-04/#release","title":"Release","text":"<p>The concept of a \u201cRelease\u201d has been removed from the latest Scrum Guide. The idea being that each Sprint should be considered a mini-release.</p> <ul> <li>The customer would like to know what they can expect over a period of time</li> <li>The process of release planning helps the Product Owner to convey the plan giving logical milestones</li> <li>However, there is no particular sanctity with the release plan \u2013 the team must be in a position to release as and when the customer(s) demand it</li> </ul>"},{"location":"agile-scrum-note-04/#sprints","title":"Sprints","text":"<ul> <li>Sprint is a time-box within which the team needs to complete an agreed upon set of deliverables</li> <li>The goal of each Sprint should be to produce \"working software\" having \"near releasable\" quality</li> <li>The duration of a Sprint is typically 1-4 weeks</li> <li>Once agreed, the Sprint deadline can NOT be extended</li> <li>Sprint duration can change over a period of time or during the duration of the project</li> </ul>"},{"location":"agile-scrum-note-04/#factors-in-selecting-a-sprint-duration","title":"Factors in selecting a Sprint duration","text":"<ul> <li>The length of the release being worked on</li> <li>The amount of uncertainty</li> <li>The ease of getting feedback</li> <li>How long priorities can remain unchanged</li> <li>Willingness to go without feedback</li> <li>The overhead of iterating</li> <li>A feeling of urgency is maintained</li> </ul>"},{"location":"agile-scrum-note-04/#no-changes-in-a-sprint","title":"No changes in a Sprint","text":"<ul> <li>Once the Sprint plan is agreed upon, there can be no more additions to the Sprint backlog</li> <li>Changes to the committed stories are not allowed</li> <li>There can be no extension to the Sprint deadline</li> <li>The Product owner can:<ul> <li>Make changes to the product backlog (add, remove or change stories that are not in the Sprint)</li> <li>Terminate a Sprint and re-plan (under extreme circumstances)</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-04/#daily-scrum","title":"Daily Scrum","text":"<ul> <li>Each participant answers 3 questions:<ol> <li>What did you do yesterday?</li> <li>What will you do today?</li> <li>What\u2019s in your way?</li> </ol> </li> <li>These are not status sessions for the manager</li> <li>They are team member commitments in front of the team</li> <li>They are important because<ul> <li>G: It Gets the team together</li> <li>I: Information is shared</li> <li>F: It helps them Focus</li> <li>T: It builds the Team</li> </ul> </li> <li>Best practices:<ul> <li>15 minutes or less</li> <li>The whole team stands (so that the meeting ends soon!)</li> <li>Even remote participants are required and they stand too!</li> <li>No side conversation until the end of the meeting</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-04/#sprint-review","title":"Sprint Review","text":"<ul> <li>Attended by: Team, Product Owner, Scrum Master, and optionally other stakeholders</li> <li>The team provides a demo of the working system with new features</li> <li>Feedback from participants is taken and recorded<ul> <li>Product Owner should consider it as potential backlog items</li> </ul> </li> <li>Purpose of a Sprint Review:<ul> <li>Validate understanding of requirements</li> <li>Get feedback</li> <li>Check that the team is on track (or find out if it is not)</li> </ul> </li> <li>Also check<ul> <li>Items which were on the Sprint backlog but not completed (partially or totally) are added to the Product backlog</li> <li>Product owner triages feedback and adds those to the backlog</li> <li>If a customer (or stakeholder) wants to start using the product (or a feature in the product), the Product Owner takes a call about releasing it (alpha or beta)</li> <li>Optionally record the demo and make it available to others who could not attend</li> <li>The team formally closes the Sprint after doing the retrospective</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-04/#sprint-retrospectives","title":"Sprint Retrospectives","text":"<ul> <li>A 1-2 hour meeting at the end of each Sprint<ul> <li>To review what is working and what is not</li> <li>To come up with actions to improve</li> </ul> </li> <li>Attended by the Team, Scrum Master and optionally a neutral facilitator</li> <li>What it is NOT<ul> <li>A meeting to assign blame</li> <li>A performance review for senior management</li> </ul> </li> <li>Why are retrospectives important?<ul> <li>Provides the team visibility</li> <li>Enables them to take control of actions</li> </ul> </li> <li>Making retrospectives effective<ul> <li>Create lists<ul> <li>What is working (Keep these)</li> <li>What is not working</li> <li>What could we try in the next Sprint</li> </ul> </li> <li>Get input from everybody</li> <li>Prioritize the list and agree upon few things to try</li> <li>Assign actions and follow up</li> <li>Agree on token penalty of actions are incomplete</li> <li>Find a way to make the meeting fun</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-05/","title":"Agile Scrum Note 05","text":"<p>Artifacts that are used in Scrum projects</p>"},{"location":"agile-scrum-note-05/#product-backlog","title":"Product backlog","text":"<ul> <li>Collection of everything that the team could do which adds value to the customer</li> <li>Defined in terms of user stories and epics</li> <li>All items in the backlog must be ranked in priority order</li> <li>Needs to be well defined for the next 2 or 3 Sprints<ul> <li>Rest could be defined at a high level</li> </ul> </li> <li>It is a \u201clive\u201d list maintained by the Product Owner</li> <li>Backlog items can be:<ul> <li>Functional or non-functional requirements</li> <li>Technical upgrades</li> <li>Significant bug-fixes</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-05/#product-release-and-sprint-backlog","title":"Product, release and sprint backlog","text":"<ul> <li>Release backlog is a subset of the Product backlog (everything targeted to a release)</li> <li>Sprint backlog is a subset of the Release backlog (everything targeted to a particular Sprint)</li> <li>Product backlog may be in terms of epics, Release backlog may be in terms of stories and Sprint backlog should be down to the sub-story and \"task\" level</li> </ul>"},{"location":"agile-scrum-note-05/#user-story","title":"User story","text":"<ul> <li>Is the most granular unit of requirement expressed by the Product Owner</li> <li>Provides a simple medium for:<ul> <li>Gathering basic information about stories,</li> <li>Recording high-level requirements,</li> <li>Developing work estimates, and</li> <li>Defining acceptance tests</li> </ul> </li> <li>Acts as agreements between customers and team members to discuss detail requirements during an iteration</li> <li>3 C's:<ul> <li>Card</li> <li>Conversation</li> <li>Confirmation</li> </ul> </li> <li>I.N.V.E.S.T.:<ul> <li>Independent</li> <li>Negotiable</li> <li>Valuable</li> <li>Estimable</li> <li>Small</li> <li>Testable</li> </ul> </li> <li>Example user story: formal<ul> <li>As a &lt;role&gt;: who wants this piece of functionality</li> <li>I want to &lt;goal/desire&gt;: what the user wants</li> <li>so that &lt;benefit&gt;: why the user wants it</li> <li>Priority</li> <li>Estimate</li> <li>See Example:<ul> <li>As an employee, I want to be able to purchase a parking pass online so that I can save time AND be able to park my car safely in the basement.</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-05/#story-card-information","title":"Story card information","text":"<ul> <li>Story identifier and name</li> <li>Story description: A few sentences that describes the feature</li> <li>Story type (C=customer domain, T=technology domain)</li> <li>Estimated work effort: The estimated work effort needed to deliver the story (this is given by the team)</li> <li>Estimated Value Points</li> <li>Requirements uncertainty: An \"exploration factor\" for the story</li> <li>Story dependencies:</li> <li>Acceptance tests: Basis on which the customer team will accept or reject</li> </ul>"},{"location":"agile-scrum-note-05/#multiple-stories-may-be-required-to-complete-a-feature","title":"Multiple stories may be required to complete a feature","text":"<p>Feature: As a credit analyst I need the ability to check a customer's credit rating.</p> <ul> <li>Story 1: As a credit analyst I need the ability to check the prior payment history with this customer.</li> <li>Story 2: As a credit analyst I need the ability to check this customer's credit bureau status.</li> <li>Story 3: As a credit analyst I need the ability to calculate our internal credit rating based on history and credit report.</li> </ul>"},{"location":"agile-scrum-note-05/#epics","title":"Epics","text":"<p>Way of grouping stories together - by a higher level goal or aggregating a large number of sub-stories into a big story</p>"},{"location":"agile-scrum-note-05/#writing-good-stories","title":"Writing good stories","text":"<ul> <li>Use example templates \u2013 As a [role] I can [feature] so that [reason] \u2022Make the stories small (use 3\u201d X 5\u201d index cards so that you don't write too much)</li> <li>Make it testable by giving acceptance criteria<ul> <li>Given [context] &lt;and/or [some more context]&gt; When [event] Then [outcome] &lt;and/or [another outcome]&gt;</li> <li>Example: Given account balance is negative and no direct deposit is scheduled on the day when the account holder tries to withdraw money then the bank will deny the request and send the account holder an alert</li> </ul> </li> <li>\u201cConnect the dots\u201d by thinking of all possible scenarios that could arise (use case thinking)</li> </ul>"},{"location":"agile-scrum-note-05/#splitting-user-stories","title":"Splitting user stories","text":"<ul> <li>A story should be small (no more than 40 man hours of effort)</li> <li>Keeping stories small allows the team to build incrementally, getting validation along the way</li> <li>It requires considerable effort on part of the Product Owner to write requirements at that level of granularity</li> <li>We shall look at ways in which larger stories can be split into multiple smaller stories<ul> <li>Big Picture<ul> <li>Research v.s. Action: Spend a time-boxed period on research before moving to the action story if the story requires research</li> <li>Spike v.s. Implementation: Spend some time doing experimentation to gain better understanding before moving to implementation</li> <li>Main flow v.s. Alternate flow: Implement the happy path first, then take up the alternate paths</li> <li>Buy v.s. Build: Spend some time to see if what you need already exists and can be bought - a widget, an algorithm or component</li> </ul> </li> <li>User Experience<ul> <li>Batch v.s. Online: Keep the user interactions away for some time by implementing a batch system</li> <li>Single user v.s. Multi-user: Keep concurrency, access control issues aside for some time, think about single user</li> <li>API only v.s. User interface: Build the fancy UI later, first think about the programmatic interface</li> <li>Generic UI v.s. Custom UI: Use basic widgets to begin with - add the fancy controls later</li> </ul> </li> <li>Others<ul> <li>Static v.s. Dynamic: Use static or cached information to begin with - think about dynamic later</li> <li>Ignore errors v.s. Handle errors: Add more sophisticated exception handling later, first implement core logic</li> <li>Transient v.s. Persistent: Worry about persisting data later, first work on transient information</li> <li>Low fidelity v.s. High fidelity: Improve quality of output progressively</li> <li>Small scale v.s. Large scale: Forget about scale issues for some time, then add scalability</li> <li>Unreliable v.s. Reliable: Perfect uptime is expensive, build it step-by-step</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/","title":"Agile Scrum Note 06","text":"<p>Scrum best practices you should know</p>"},{"location":"agile-scrum-note-06/#continuous-refactoring","title":"Continuous Refactoring","text":"<ul> <li>Cleaning up the code (changes that do not change the expected inputs or outputs) for one or more of the following reasons:<ul> <li>Better readability</li> <li>Optimizing processing logic</li> <li>Improving maintainability</li> <li>Improving performance</li> <li>Complying with design guidelines and framework</li> </ul> </li> <li>Re-factoring is a best practice - particularly important in Agile, as the code gets built incrementally</li> <li>The team should write re-factoring stories and request the Product owner to prioritize</li> <li>Extreme Programming advocates continuous re-factoring<ul> <li>Remember the Agile principle: \"Continuous attention to technical excellence and good design enhances agility\"</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/#pair-programming","title":"Pair Programming","text":"<ul> <li>Two people looking at one machine with one keyboard and one mouse<ul> <li>One driver and one navigator</li> <li>One implements, one strategizes</li> <li>All code written in pairs</li> </ul> </li> <li>Produces 15% less output, but:<ul> <li>Leads to better design, quality</li> <li>Succession planning</li> <li>Training opportunities</li> </ul> </li> <li>Especially useful while<ul> <li>Writing complex logic</li> <li>Debugging \"hard-to-solve\" problems</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/#continuous-integration","title":"Continuous Integration","text":"<ul> <li>Originated with the Extreme Programming development process, as one of its original twelve practices.</li> <li>Continuous integration is an approach that keeps everybody's code integrated and builds release infrastructure along with the rest of the application.</li> <li>Practices of continuous integration<ul> <li>Maintain a single source repository</li> <li>Automate the build</li> <li>Make your build self- testing</li> <li>Everyone commits to the mainline every day</li> <li>Every commit should build the mainline on an integration machine</li> <li>Keep the build fast</li> <li>Test in a clone of the production environment</li> <li>Make it easy for anyone to get the latest executable</li> <li>Everyone can see what's happening</li> <li>Automate deployment</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/#configuration-management","title":"Configuration Management","text":"<ul> <li>Best practices<ul> <li>Invest in automation tools (automate the build, automate the tests)</li> <li>Enforce discipline in code check-ins (mandatory code review workflow, mandatory tests and code coverage reports)</li> <li>Use static code analyzers</li> <li>Use tools that allow multiple check-outs and safe merges</li> </ul> </li> <li>Hire a good configuration manager to automate and then recede into the background</li> </ul>"},{"location":"agile-scrum-note-06/#quality-in-agile","title":"Quality in Agile","text":"<ul> <li>Quality is defined as \"conformance to specifications and fitness of purpose\"<ul> <li>Extrinsic or Customer perceived quality is perceived when the product is delivered to the customer and measured by the extent to which they realize \"value\" from it</li> <li>Intrinsic or Technical quality is the quality that is perceived by the team</li> <li>Technical quality has many facets including modularity, maintainability, scalability, reliability, etc.</li> <li>Extrinsic quality is non-negotiable, but Intrinsic quality is also critical to ensure that you can continue to deliver value</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/#scrum-quality-home-truths","title":"Scrum Quality - Home truths","text":"<ul> <li>Building in \"near releasable quality\" Sprint after Sprint is DIFFICULT - but it is an important goal</li> <li>There is no separate QA team - there is ONE team and each member of the team is responsible for quality</li> <li>Quality has to be built into the development process</li> <li>Be prepared to make a heavy investment in automated testing</li> <li>Inspections have to be early and continuous - the later you give feedback, the harder (and costlier) it is to fix</li> <li>Inspections must incorporate verification (are we building the product right) and validation (are we building the right product)</li> </ul>"},{"location":"agile-scrum-note-06/#test-driven-development-tdd","title":"Test Driven Development (TDD)","text":"<ul> <li>The goal of every team should be to move towards Test-Driven Development</li> <li>Also known as Test first programming</li> <li>It is an evolutionary (iterative and incremental) approach to programming where agile software developers must first write a test that fails before they write new functional code.</li> <li>When adding a feature, a pair may perform dozens of these cycles, implementing and refining the software in baby steps until there is nothing left to add and nothing left to take away.</li> <li>Step:<ol> <li>Quickly add a test, basically just enough code to so that the tests now fail.</li> <li>Run the tests, often the complete test suite, although for sake of speed they may run only a subset to ensure that the new test does in fact fail.</li> <li>Update the functional code so it passes the new test.</li> <li>Run the tests again.</li> <li>If the tests fail return to step 3.</li> <li>Once the tests pass the next step is to start over (agilists may also want to refactor any duplication out of their design as needed).</li> </ol> </li> </ul> <ul> <li>Advantages of TDD:<ul> <li>TDD forces developers to do detailed design just in time (JIT) before writing the code.</li> <li>It ensures that agile developers have testing code available to validate their work, ensuring that they test as often and early as possible.</li> <li>It gives developers the courage to refactor their code to keep it the highest quality possible, because they know there is a test suite in place that will detect if they have \"broken\" anything as the result of refactoring.</li> <li>Research shows that TDD substantially reduces the incidence of defects [Janzen &amp; Saiedian].</li> <li>It also helps improve your design, documents your public interfaces, and guards against future mistakes.</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-06/#done-criteria","title":"Done criteria","text":"<ul> <li>It is a good idea to clearly define the meaning of the term \"Done\"</li> <li>The Scrum Master can help the team come up with these guidelines</li> <li>For example, a story can be DONE when:<ul> <li>Design is completed and reviewed by the architect</li> <li>Coding is completed for 100% of the paths described in the story</li> <li>Testing is completed for the story</li> <li>Regression testing is done to ensure no unexpected impacts</li> <li>All identified bugs are fixed</li> <li>Technical and user documentation is updated for the added/changed functionality</li> </ul> </li> <li>Similarly, you can define DONE criteria for Sprints or Releases</li> </ul>"},{"location":"agile-scrum-note-07/","title":"Agile Scrum Note 07","text":"<p>Information about Scrum planning</p>"},{"location":"agile-scrum-note-07/#principles-behind-agile-planning","title":"Principles behind Agile planning","text":"<ul> <li>Planning in Agile is considered as a \"Speculative\" activity, i.e., you make a forecast that is reasonable, based on the available information</li> <li>The plan is elaborated and becomes more and more definitive over a period of time</li> <li>Normally on Agile projects, you plan based on \"time-boxes\", i.e., fix the time and resources available and determine the features that can be delivered</li> <li>The plan has to be flexible and planning is an on-going activity</li> <li>Try not to pack too much into the plan - allow space to accommodate changes</li> </ul>"},{"location":"agile-scrum-note-07/#iterations-allow-for-mid-course-corrections","title":"Iterations allow for mid-course corrections","text":""},{"location":"agile-scrum-note-07/#multiple-levels-of-planning","title":"Multiple levels of planning","text":"<ul> <li>Iteration planning considers the tasks that are needed to transform a Feature Request into working, tested software</li> <li>Iteration Planning occurs at the start of each iteration</li> <li>Product Planning involves a product owner looking ahead than the immediate release and planning for the evolution of released system</li> <li>Portfolio planning involves the selection of the products that will best implement a vision established through an organization's strategic planning</li> </ul>"},{"location":"agile-scrum-note-07/#release-planning","title":"Release planning","text":"<p>A Release Plan presents a roadmap of how the team intends to achieve the product vision within the project objectives and constraints identified up-front</p> <ul> <li>It helps the product owner and the whole team decide how much must be developed and how long that will take before they have a releasable product</li> <li>A release conveys expectations about what is likely to be developed and in what timeframe</li> <li>A release plan serves as a guidepost toward which the project team can progress</li> </ul>"},{"location":"agile-scrum-note-07/#steps-to-planning-a-release","title":"Steps to planning a release","text":"<p>The team and product owner collaboratively explore the product owner's conditions of satisfaction that include scope, schedule, budget, and quality.</p>"},{"location":"agile-scrum-note-07/#release-planning_1","title":"Release Planning","text":"<p>The purpose of Release Planning is to define the contents of a release or a specific shippable product increment.</p>"},{"location":"agile-scrum-note-07/#velocity","title":"Velocity","text":"<ul> <li>Velocity is a measure of a team's rate of progress per Sprint</li> <li>It is calculated by summing the number of story points assigned to each user story that the team completed during the Sprint.</li> </ul>"},{"location":"agile-scrum-note-07/#sprint-planning","title":"Sprint planning","text":"<ul> <li>The Goal of Sprint planning is for the team to make a \"good commitment\" about what they will deliver at the end of the Sprint</li> <li>A \"good commitment\" means:<ul> <li>Everybody is clear about the goals</li> <li>Everybody agrees that it is \"achievable\"</li> </ul> </li> <li>It should be achievable without sacrificing:<ul> <li>Sustainable pace</li> <li>Quality (near releasable quality)</li> </ul> </li> <li>A Sprint pre-planning meeting and preparations would help</li> </ul>"},{"location":"agile-scrum-note-07/#velocity-driven-sprint-planning","title":"Velocity driven sprint planning","text":""},{"location":"agile-scrum-note-07/#commitment-driven-sprint-planning","title":"Commitment driven sprint planning","text":"<p>In Commitment driven sprint planning, the team is asked to add stories to the sprint one-by-one until they can commit to completing no more.</p>"},{"location":"agile-scrum-note-07/#find-out-how-much-time-is-available","title":"Find out how much time is available","text":"<p>Allow time for:</p> <ul> <li>Hacking, reading blogs, 20% time?</li> <li>Lunch, tea breaks</li> <li>Email</li> <li>Meetings</li> <li>Fixing P1 bugs from previous version</li> <li>Time committed to other teams</li> </ul>"},{"location":"agile-scrum-note-07/#planning-for-each-story","title":"Planning for each story","text":"<ul> <li>Find out what \"tasks\" are needed<ul> <li>Design / Design review</li> <li>Code</li> <li>Unit test</li> <li>System and regression test</li> <li>Documentation</li> <li>Bug fixing</li> </ul> </li> <li>Assign tasks to resources and re-estimate the tasks</li> <li>Make sure the team member has time available</li> </ul>"},{"location":"agile-scrum-note-07/#keep-in-mind-before-finalizing-the-plan","title":"Keep in mind before finalizing the plan","text":"<ul> <li>Does everybody in the team have enough (not too little and not too much) work to do?</li> <li>Have you considered correct capacity (e.g. account for planned leaves)?</li> <li>Do you have some buffer to accommodate unplanned absence or other contingencies?</li> <li>Have you kept time aside for Scrum rituals: Planning, Stand-ups, Review, Retrospective?</li> <li>Do you understand the dependencies and have they been tied up?</li> </ul>"},{"location":"agile-scrum-note-08/","title":"Agile Scrum Note 08","text":"<p>How to estimate efforts in Scrum projects</p>"},{"location":"agile-scrum-note-08/#principles-behind-scrum-estimation","title":"Principles behind Scrum estimation","text":"<ul> <li>Achieving \"precision\" in estimates is neither possible nor necessary \u2013 being \"predictable\" is good enough</li> <li>The team which is going to do the work has the final word about estimates \u2013 it does not matter what others think</li> <li>Just like planning, estimation gets progressively closer to the actual as more and more information becomes available</li> <li>Scrum accelerates feedback about estimates, i.e., bad estimation will be exposed faster</li> </ul>"},{"location":"agile-scrum-note-08/#estimation-techniques","title":"Estimation techniques","text":"<ul> <li>Estimates are classified as Top-Down or Bottom-Up</li> <li>Top-Down<ul> <li>Expert estimation</li> <li>Analogous estimation</li> <li>Parametric estimation</li> </ul> </li> <li>Bottom-up or Detailed estimation</li> </ul>"},{"location":"agile-scrum-note-08/#types-of-estimates","title":"Types of estimates","text":"<ul> <li>Order of Magnitude<ul> <li>-25% to +75%</li> <li>These are used for Go/No-Go decisions</li> </ul> </li> <li>Budgetary<ul> <li>-10% to +25%</li> <li>Used for allocation of budgets</li> </ul> </li> <li>Definitive<ul> <li>-5% to +10%</li> </ul> </li> <li>Remember there is always a \"range of values\" to estimates \u2013 be sure to understand this and factor in while planning</li> </ul>"},{"location":"agile-scrum-note-08/#uncertainty-in-estimates","title":"Uncertainty in estimates","text":""},{"location":"agile-scrum-note-08/#over-estimation-and-under-estimation","title":"Over-estimation and under-estimation","text":"<ul> <li>Underestimation is typically underestimated (i.e., overestimation is overestimated)<ul> <li>Managers always feel the urge to deal with overestimation, but feel no need to deal with underestimation</li> <li>But underestimation is more prevalent and perhaps more dangerous</li> </ul> </li> <li>Nothing is impossible for the man who doesn\u2019t have to do it himself (A.H. Weiler)</li> <li>It always takes longer than you expect, even if you take into account Hofstadter\u2019s law</li> </ul>"},{"location":"agile-scrum-note-08/#what-contributes-to-size","title":"What contributes to size","text":"<ul> <li>Size or \"bigness\" of work is governed by:<ul> <li>How complex is it</li> <li>How risky it is?</li> <li>How much of it is there?</li> </ul> </li> </ul> <p>Raw size can be \"adjusted\" as follows:</p> <pre><code>Adjusted estimate = Raw estimate * (\n    1 +\n    Complexity Factor +\n    Drag (unfamiliarity of the team) +\n    Working environment (lack of co-location and good work conditions) +\n    Multiple teams (Overhead caused by working on multiple teams)\n)\n</code></pre>"},{"location":"agile-scrum-note-08/#measures-of-size","title":"Measures of size","text":"<ul> <li>Sequential<ul> <li>Lines of code</li> <li>Function points</li> </ul> </li> <li>Agile<ul> <li>Story points</li> <li>Ideal days</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-08/#ideal-days","title":"Ideal days","text":"<ul> <li>How many days would it take under \"ideal\" circumstances<ul> <li>Considers only actual \"work\" time \u2013 no distractions</li> <li>Examples of distractions<ul> <li>Email</li> <li>Personal work (e.g. reading Facebook updates)</li> <li>Meetings not connected to actual work</li> <li>Breaks for tea, coffee, lunch, etc.</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-08/#converting-ideal-days-to-actual-days","title":"Converting ideal days to actual days","text":"<ul> <li>Converting ideal to actual days needs to take into account the following<ul> <li>How much distraction needs to be considered?</li> <li>Does the resource have other tasks?</li> <li>Who is actually doing the work (expert or novice)?</li> </ul> </li> <li>Example: What are the \"ideal days\" for this story<ul> <li>A report for a banking application is taking too long (up to an hour). We need to profile the process, discover the bottlenecks and tune the process to improve it to not more than 30 seconds.</li> </ul> </li> <li>Now what are the \"actual\" days?</li> </ul>"},{"location":"agile-scrum-note-08/#story-points","title":"Story points","text":"<ul> <li>Story points uses \"analogous\" estimation techniques</li> <li>Establish a small story as a benchmark and assign it one story point</li> <li>Then assign story points to other stories relative to the benchmark<ul> <li>If it is twice as big, give it 2 story points, if it is thrice as big, give it 3 story points and so on</li> </ul> </li> <li>Relative value is what matters, absolute number is not important</li> <li>Points are assigned for the entire effort (including design, code, test, etc.)</li> </ul>"},{"location":"agile-scrum-note-08/#story-points-example","title":"Story points example","text":"<ul> <li>What is the size of this story as compared with the previous story?<ul> <li>Previous story: A report for a banking application is taking too long (up to an hour). We need to profile the process, discover the bottlenecks and tune the process to improve it to not more than 30 seconds.</li> <li>New story: The day-end processing for a trading application takes over 30 minutes. This needs to come down to no more than a minute. Processing includes processing and completing 20 reports.</li> </ul> </li> <li>If the previous story had a story point of 3, what is the story point for the new story?</li> <li>If the previous story took 5 Person days to complete, how much time will the new story take?</li> </ul>"},{"location":"agile-scrum-note-08/#using-story-points","title":"Using story points","text":"<ul> <li>Do not use a single gold standard: Triangulate instead<ul> <li>Choose a small story \u2013 assign it 1 story point</li> <li>Choose a medium story \u2013 assign it 5 story points</li> <li>Choose a large story \u2013 assign it 13 story points</li> <li>Now where does a story stand in comparison to the three?</li> </ul> </li> <li>Story points are usually assigned in a non-linear scale<ul> <li>Doubling scale: 1, 2, 4, 8, 16, 32, ...</li> <li>Modified Fibonacci series: 1, 2, 3, 5, 8, 13, 20, ...</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-08/#comparing-the-approaches","title":"Comparing the approaches","text":"<ul> <li>Story points help drive cross-functional behavior</li> <li>Story point estimates do not decay</li> <li>Story points are a pure measure of size</li> <li>Estimating in story points is typically faster</li> <li>My ideal days cannot be added to your ideal days</li> <li>Ideal days are easier to explain outside the team</li> <li>Ideal days are easier to estimate at first</li> <li>Ideal days can force companies to confront time wasting activities</li> </ul>"},{"location":"agile-scrum-note-08/#estimation-techniques-planning-poker","title":"Estimation techniques \u2013 Planning poker","text":"<ul> <li>An iterative approach to estimating</li> <li>Steps<ul> <li>Each estimator is given a deck of cards, each card has a valid estimate written on it</li> <li>Customer/Product owner reads a story and it\u2019s discussed briefly</li> <li>Each estimator selects a card that\u2019s his or her estimate</li> <li>Cards are turned over so all can see them</li> <li>Discuss differences (especially outliers)</li> <li>Re-estimate until estimates converge</li> </ul> </li> <li>Planning poker tips<ul> <li>What if the discussion lingers too long?<ul> <li>Scrum Master should limit the discussion focused on topic</li> <li>Keep a timer to \"time-box\" the discussion</li> </ul> </li> <li>What if the estimates never converge?<ul> <li>Ask the team if they want to go with the majority view</li> <li>If you know who is actually going to do the work, go with that person\u2019s view</li> <li>Be patient and let the team agree on the terms of the agreement \u2013 do NOT force your views</li> </ul> </li> </ul> </li> <li>Advantages of planning poker<ul> <li>It gets the whole team involved<ul> <li>Team involvement generates \"buy-in\" and ensures commitment</li> <li>Everybody gets exposure to all the stories</li> <li>Everybody\u2019s experience comes into play</li> </ul> </li> <li>It triggers a lot of very useful discussion<ul> <li>About clarifying the requirement</li> <li>About the technical approach and design</li> <li>About possible challenges and risks</li> <li>About the estimate itself</li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-08/#affinity-estimation","title":"Affinity estimation","text":"<p>Affinity Estimating is a technique many teams use to quickly and easily estimate (in Story Points) a large number of user stories.</p> <ul> <li>Is Quick and Easy</li> <li>Decision making process is visible</li> <li>Creates a positive experience rather than confrontational one</li> </ul>"},{"location":"agile-scrum-note-08/#affinity-estimation-process","title":"Affinity estimation - process","text":"<p>Credits: http://www.gettingagile.com/2008/07/04/affinity-estimating-a-how-to/</p> <ul> <li>Select the set of stories and write one story on a post-it note or a card</li> <li>Ask the team members to rank the stories from smallest to largest</li> <li>It may require discussion and few iterations to get the team to agree on the order</li> </ul> <p></p> <ul> <li>Now give the team a few \"buckets\" in which to place the stories. It could be T-shirt sizes (XS, S, M, L and XL) or story points (1, 2, 5, 8, 13)</li> <li>A story can only be in one bucket</li> <li>Collect the information and summarize</li> </ul> <p></p>"},{"location":"agile-scrum-note-09/","title":"Agile Scrum Note 09","text":"<p>Tools and techniques to monitor Scrum projects</p>"},{"location":"agile-scrum-note-09/#principles-in-monitoring-scrum-projects","title":"Principles in monitoring Scrum Projects","text":"<ul> <li>Ideally, the TEAM should monitor its own progress<ul> <li>The manager or Scrum Master should NOT micro- manage</li> </ul> </li> <li>The Scrum Master should try to provide the team visibility so that they can make informed decisions</li> <li>Common tracking mechanisms in Scrum<ul> <li>Daily stand-up meetings</li> <li>Reviews and retrospectives</li> <li>Metrics</li> <li>Charts</li> <li>Information radiators</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-09/#metrics","title":"Metrics","text":"<ul> <li>A metric is a standard for measuring or evaluating something.</li> <li>A measure is a quantity, a proportion, or a qualitative comparison of some kind.<ul> <li>Quantity: \"There are 25 open defect reports on the application as of today.\"</li> <li>Proportion: \"This week there are 10 percent fewer open defect reports than last week.\"</li> <li>Qualitative comparison: \"The new version of the software is easier to use than the old version.\"</li> </ul> </li> <li>Types of metrics<ul> <li>Business<ul> <li>RTF (Running Tested Features)</li> <li>Earned Business Value (EBV)</li> <li>Net Present Value (NPV)</li> <li>Internal Rate of Return (IRR)</li> <li>Return on Investment (ROI)</li> </ul> </li> <li>Process<ul> <li>Impediments cleared per iteration</li> <li>Impediments &amp; User stories carried over the next iteration</li> <li>User stories done per iteration</li> <li>Defects carried over the next iteration</li> <li>Team member loading</li> <li>Velocity</li> <li>Backlog size</li> </ul> </li> <li>Project Testing<ul> <li>Acceptance tests per story</li> <li>Defects count per story</li> <li>Escaped Defects per cycle</li> <li>Tests time to run</li> <li>Tests run per frequency</li> <li>Time to fix tests</li> </ul> </li> <li>Do's and Don'ts<ul> <li>Measure only a few things that matter (just because it can be measured doesn\u2019t mean it is important)</li> <li>It should be easy to calculate (ideally an automated process)<ul> <li>If it is too cumbersome, either people won\u2019t do it or it will be incorrect</li> </ul> </li> <li>It should be easy to explain and interpret</li> <li>It should result in tangible action<ul> <li>Behavior that you want to encourage OR</li> <li>Behavior that you want to discourage</li> </ul> </li> <li>Use metrics to guide action, not for witch-hunts</li> <li>In Scrum, team metrics are preferred</li> <li>Do NOT use metrics for performance appraisals<ul> <li>It will usually result in perverse incentive to manipulate the number</li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"agile-scrum-note-09/#charts-in-scrum","title":"Charts in Scrum","text":"<ul> <li>Commonly used charts:<ul> <li>Burn-down, Burn-up charts</li> <li>Cumulative Flow Diagrams</li> <li>Progress Charts</li> <li>Risk profile graphs</li> <li>Others</li> </ul> </li> <li>Charts are useful because:<ul> <li>It indicates trends (trends are more important than absolute numbers)</li> <li>It is more \"visual\" (a picture is worth a thousand words)</li> <li>Management loves charts!</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-09/#burn-down-chart","title":"Burn-down Chart","text":""},{"location":"agile-scrum-note-09/#burn-down-chart-bar-style","title":"Burn-down Chart Bar Style","text":""},{"location":"agile-scrum-note-09/#burn-up-and-burn-down-chart","title":"Burn-up and Burn-down Chart","text":""},{"location":"agile-scrum-note-09/#cumulative-flow-diagram","title":"Cumulative Flow Diagram","text":""},{"location":"agile-scrum-note-09/#parking-lot-diagram","title":"Parking Lot Diagram","text":""},{"location":"agile-scrum-note-09/#escaped-defects-found","title":"Escaped defects found","text":"<p>Escaped Defects Found counts number of new escaped defects found over period of time (day, week, month).</p>"},{"location":"agile-scrum-note-09/#velocity-chart","title":"Velocity Chart","text":""},{"location":"agile-scrum-note-09/#progress-chart-kanban","title":"Progress Chart / Kanban","text":""},{"location":"agile-scrum-note-09/#niko-niko-calendar","title":"Niko Niko Calendar","text":""},{"location":"agile-scrum-note-09/#information-radiators","title":"Information radiators","text":"<p>\"An information radiator displays information in a place where passers by can see it. With information radiators, the passers by don't need to ask any question; the information simply hits them as they pass.\"</p> <ul> <li>Invented by Alistair Cockburn</li> <li>Team members can view the current state of the project : schedules, tasks, progress, issues</li> <li>Scrum teams should use it to make progress (or lack of) visible</li> </ul> <p></p> <p>Most popular Information radiators are:</p> <ul> <li>Task Boards</li> <li>Big Visible charts (Includes burn down charts)</li> <li>Continuous Integration build health Indicators (Including lava lamps and street lights)</li> </ul> <p></p> <p>Effective Information Radiators should be :</p> <ul> <li>Simple: Should be Brief and concise.</li> <li>Stark: Should display the progress and expose problems. Errors should not be masked, rather used to improve the work and performance</li> <li>Current: Information displayed should be current</li> <li>Transient: The problems and errors shouldn't be there on the chart for long; once the problem has been rectified, it should be taken off</li> <li>Influential: Influences the team members and management and empowers the whole team to take decisions</li> <li>Highly visible</li> <li>Minimal in number</li> </ul>"},{"location":"agile-scrum-note-10/","title":"Agile Scrum Note 10","text":"<p>Advanced concepts in Scrum</p>"},{"location":"agile-scrum-note-10/#scrum-on-large-projects","title":"Scrum on large projects","text":"<ul> <li>Split into smaller teams each delivering a logical portion</li> <li>Logical portion is determined by being able to deliver tangible customer value on their own</li> <li>Bad division:<ul> <li>Dev Team, QA Team, Regression Team, Automation Team</li> <li>UI Team, Database Team, Server Team</li> </ul> </li> <li>Good division:<ul> <li>Platform Team, Content Team</li> <li>Deposits Module, Advances Module</li> </ul> </li> <li>Each team is cross-functional and has its own backlog</li> <li>Some stories/epics may run across teams</li> <li>Dependencies across teams have to be handled carefully</li> <li>Some \u201clook-ahead planning\u201d helps</li> </ul>"},{"location":"agile-scrum-note-10/#scrum-of-scrum","title":"Scrum-of-Scrum","text":"<ul> <li>Useful in circumstances when multiple teams are working on the same system or systems with multiple integration points</li> <li>It is essentially a meeting where representatives (1 or 2) from each Scrum team attends<ul> <li>Product Owner, Scrum Master/Architect</li> </ul> </li> <li>The focus of this meeting is on inter-dependencies and coordination</li> <li>This meeting need not be daily \u2013 the frequency should be governed by the level of interaction required</li> </ul>"},{"location":"agile-scrum-note-10/#product-coordination-teams","title":"Product coordination teams","text":"<ul> <li>Assign few members whose job is to coordinate across multiple teams</li> <li>What to coordinate?<ul> <li>High priority stories or epics that go across multiple teams</li> <li>Sort out technical issues; interface definitions</li> <li>Ensure consistency and uniformity of design</li> <li>Bubbling up any issues with regard to dependencies</li> </ul> </li> <li>Coordination may either be a full-time or part-time role depending upon how tight the dependencies are</li> <li>Sometimes works better than Scrum-of-Scrums because responsibility is assigned</li> </ul>"},{"location":"agile-scrum-note-10/#scrum-on-maintenance-projects","title":"Scrum on maintenance projects","text":"<ul> <li>Two questions:<ul> <li>Can you define a clear, prioritized backlog of enhancement requests?</li> <li>Can you estimate the time required for the requests with reasonable certainty?</li> </ul> </li> <li>If the answer is YES, you can apply Scrum to such a project<ul> <li>Provide larger buffer for ad-hoc requests that are inevitable</li> <li>Alternately, establish a \u201cresolution\u201d or \u201csustaining\u201d team to shield the team working on new features</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#distributed-scrum-teams","title":"Distributed scrum teams","text":"<ul> <li>No doubt running a distributed Scrum team is challenging:<ul> <li>Scrum emphasizes face-to-face communication, cross- functional teams and close collaboration</li> <li>Scrum rituals like daily stand-ups, sprint planning, review and retrospective become more challenging</li> </ul> </li> <li>However:<ul> <li>Distributed Scrum is still better than distributed waterfall</li> <li>It is still possible to implement Scrum with distributed teams \u2013 with some best practices to help</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#best-practices-in-distributed-scrum","title":"Best practices in distributed scrum","text":"<ul> <li>If you had a distributed team with time zones nearly 12 hours away, what would you prefer?<ul> <li>Teams working away on huge requirements documents and come back with something after 6 months? OR</li> <li>Frequent check points - preferably something tangible to see every week?</li> </ul> </li> <li>Three important things to keep in mind:<ul> <li>Apply/Tailor Scrum practices effectively</li> <li>Follow good software engineering practices</li> <li>Work on the people-to-people equations</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#scenario-1-team-in-india-po-in-us","title":"Scenario-1: Team in India; PO in US","text":"<ul> <li>PO is remote and all or most of the team is in India</li> <li>Suggested Approach<ul> <li>Co-locate the Scrum Master with the team</li> <li>All meetings with PO are visual (webex/web cams)</li> <li>Mailing list with PO and entire team to be kept in cc. for all project related emails</li> <li>One hour overlap between PO and team daily</li> <li>High travel budget to have face time between PO and team</li> <li>Sprint planning split up into Pre-planning, offline analysis and finalization</li> <li>Review and retrospectives on Webex</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#scenario-2-team-split-in-two-locations","title":"Scenario-2: Team split in two locations","text":"<ul> <li>Say, 1 Dev and 3 Testers in India; 3 Dev and 1 Tester in US</li> <li>Suggested Approach<ul> <li>2 Scrum Masters (one in each location)<ul> <li>Scrum Masters may have lighter workload than a regular Scrum Master</li> </ul> </li> <li>2 daily stand-up meetings with notes from each meeting read out at start of the other meeting</li> <li>Pay lot of attention to team dynamics</li> <li>Pick and choose recommendations made for Scenario-1</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#people-practices-in-distributed-scrum","title":"People practices in distributed Scrum","text":"<ul> <li>Developing good relations between people is absolutely critical \u2013 more so in a distributed team</li> <li>So you need to invest in developing the relations and ensuring good communication channels</li> <li>Disagreement is OK; Perceiving the other as evil is dangerous</li> <li>Allow for higher travel budget \u2013 face time is irreplaceable<ul> <li>Co-locate key members for critical periods</li> <li>Rotate team members periodically across locations</li> </ul> </li> <li>Cultural exchanges \u2013 Team wikis</li> </ul>"},{"location":"agile-scrum-note-10/#practices-in-distributed-scrum","title":"Practices in distributed scrum","text":"<ul> <li>Leverage technology:<ul> <li>Good web-conferencing tools</li> <li>Good speaker phone to make tele-conferencing easier</li> <li>Switch on web-cameras/use video conferences</li> <li>Instant messaging</li> </ul> </li> <li>Be sensitive about timing of interaction<ul> <li>Working hours</li> <li>Vacation times</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#scrum-contracting","title":"Scrum-Contracting","text":"<ul> <li>Does the customer need to know about Scrum?<ul> <li>How to \u201csell\u201d the methodology to the customer</li> <li>How to tailor contracts to the methodology</li> </ul> </li> <li>Ask the customer if he would like the following:<ul> <li>A demo of working system every few weeks</li> <li>Opportunity to make changes to requirements as long as the team has not started working on them</li> </ul> </li> <li>But also tell them that:<ul> <li>They need to be available to the team for answering questions</li> <li>The team must be allowed to self-manage</li> <li>They cannot expect instant gratification on change requests</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#scrum-in-fixed-price-projects","title":"Scrum in fixed price projects","text":"<ul> <li>Challenge: Scrum advocates being \u201cresponsive\u201d to customer \u2013 but how does it work when the Price and Scope is \u201cfixed\u201d?</li> <li>In the event of a change, you could:<ul> <li>Add Sprints to the project (additional cost)</li> <li>Trade one feature for another</li> <li>So long as you haven\u2019t started working on the feature, it should be possible to do so</li> </ul> </li> <li>So change management would still work<ul> <li>But you get much more flexibility in absorbing changes</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#transitioning-a-teamproject-to-scrum","title":"Transitioning a team/project to Scrum","text":"<ul> <li>Ken Schwaber (co-founder of Scrum)<ul> <li>If waterfall is working for you, do not follow Scrum</li> <li>75% of the teams that use Scrum are not getting full value from it</li> </ul> </li> <li>Having said that:<ul> <li>The successful implementation of Scrum will have a profound transformation</li> <li>Start on the journey anticipating resistance, but also start only if you are convinced about the benefits</li> </ul> </li> </ul>"},{"location":"agile-scrum-note-10/#steps-for-transitioning-a-teamproject-to-scrum","title":"Steps for Transitioning a team/project to Scrum","text":"<ul> <li>Step-1: Start with one or few teams that are willing to try it out<ul> <li>Do not start if customer AND/OR senior management is not willing</li> <li>Skepticism is fine (even welcome), but resistance to change or closed mind is dangerous</li> <li>Find a champion or evangelist who is influential</li> </ul> </li> <li>Step-2: Understand what you are trying to achieve and find a way to measure it<ul> <li>Sell the benefits, but do not over-sell it</li> <li>Fore-warn people that it is hard</li> </ul> </li> <li>Step-3: Call it a pilot for as long as possible<ul> <li>This will make the initial chaos and mess easier to accept</li> </ul> </li> <li>Step-4: Be prepared to help:<ul> <li>Education for team members is important</li> <li>Assign a coach/mentor; do not assume they will solve all problems on their own</li> <li>Spend a lot more time with people who hate Scrum - find a way to involve them in the change</li> <li>Achieve initial successes and over-communicate about it</li> </ul> </li> <li>Step-5: Understand some teams and people will NOT like it<ul> <li>Do not force them or get drawn into a battle</li> <li>Ask if it is at least \u201cbetter than before\u201d?</li> <li>Make it safe for people to change their mind or withdraw</li> </ul> </li> </ul>"},{"location":"agile-scrum-simulation-test/","title":"Agile Scrum Simulation Test","text":"<p>A list of questions and answers about Agile Scrum</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-best-explain-the-terms-lead-time-and-cycle-time-in-lean-methodologies","title":"Which of the following BEST explain the terms 'Lead time' and 'Cycle time' in Lean methodologies?","text":"<p>A. Lead time is the amount of time it takes for a unit of work to proceed from start to finish. Cycle time is the amount of time between two successive deliveries</p> <p>B. Lead time is the waiting time between processes. Cycle time is the total time spent in processing.</p> <p>C. Lead time is the amount of wait time before a process can start. Cycle time is the total time spent in processing.</p> <p>D. Lead time and cycle time mean the same thing.</p>"},{"location":"agile-scrum-simulation-test/#during-a-daily-standup-meeting-you-would-normally-answer-which-three-questions","title":"During a daily standup meeting, you would normally answer which three questions?","text":"<p>A. What did you do yesterday, What are you planning to do today, When will you finish your tasks for the Sprint?</p> <p>B. What did you do yesterday, What are you planning to do today, What issues are blocking you?</p> <p>C. What is the status of your tasks, When will you complete them, What are your risks and issues</p> <p>D. For each task, report the status, percent complete and projected end date</p>"},{"location":"agile-scrum-simulation-test/#if-you-are-an-agile-project-manager-what-is-the-best-measure-of-success-of-your-project","title":"If you are an Agile project manager, what is the BEST measure of success of your project?","text":"<p>A. The project delivered maximum value to the customer</p> <p>B. The project was on time and on budget</p> <p>C. The customer received all the promised features</p> <p>D. All of the above</p>"},{"location":"agile-scrum-simulation-test/#what-happens-during-iteration-planning-meetings","title":"What happens during iteration planning meetings?","text":"<p>A. Team members brainstorm about the design for the iteration</p> <p>B. Activities and tasks are assigned and estimated</p> <p>C. The team is introduced to the iteration's stories for the first time</p> <p>D. The Product owner gives the goal of the iteration and tells which need to be completed</p>"},{"location":"agile-scrum-simulation-test/#if-a-team-is-looking-for-quick-time-to-market-what-would-be-the-basis-for-prioritizing-features","title":"If a team is looking for quick 'time to market', what would be the basis for prioritizing features?","text":"<p>A. Number of features</p> <p>B. Completeness of features</p> <p>C. Both the above</p> <p>D. None of the above</p>"},{"location":"agile-scrum-simulation-test/#a-projects-stakeholders-have-low-confidence-in-the-development-team-which-of-the-following-gives-the-maximum-benefit-in-terms-of-building-stakeholder-confidence","title":"A project's stakeholders have low confidence in the development team. Which of the following gives the MAXIMUM benefit in terms of building stakeholder confidence?","text":"<p>A. More meetings with the stakeholders to boost communication</p> <p>B. By having a low bug count</p> <p>C. By having a self-organized team</p> <p>D. By delivering working software with additional features at the end of each iteration</p>"},{"location":"agile-scrum-simulation-test/#if-the-burndown-chart-showed-an-upward-trend-for-two-days-in-a-row-in-the-middle-of-the-iteration-what-might-be-the-reason","title":"If the burndown chart showed an upward trend for two days in a row in the middle of the iteration, what might be the reason?","text":"<p>A. The team is not completing the stories fast enough</p> <p>B. Few team members are absent</p> <p>C. Stories got added to the iteration backlog</p> <p>D. The team is working overtime</p>"},{"location":"agile-scrum-simulation-test/#a-scrum-team-wants-the-scrum-master-role-to-be-re-defined-so-that-it-is-more-useful-for-the-team-what-should-be-done-in-this-situation","title":"A Scrum team wants the Scrum Master role to be re-defined so that it is more useful for the team. What should be done in this situation?","text":"<p>A. It should not be done</p> <p>B. The topic should be discussed at the next Scrum meeting</p> <p>C. Discuss the topic at the next Sprint retrospective</p> <p>D. The Project Management Office should be consulted for guidance</p>"},{"location":"agile-scrum-simulation-test/#a-software-company-is-building-a-new-product-to-addresses-an-important-function-in-the-healthcare-industry-this-is-an-example-of","title":"A software company is building a new product to addresses an important function in the Healthcare industry. This is an example of:","text":"<p>A. Horizontal-Market Software</p> <p>B. Concentric-Market Software</p> <p>C. Vertical-Market Software</p> <p>D. Software-as-a-service</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-are-valid-considerations-for-prioritization-of-stories","title":"Which of the following are valid considerations for prioritization of stories:","text":"<p>A. The business value of the functionality added</p> <p>B. The effort needed to build the functionality added</p> <p>C. The risk in adding the new functionality</p> <p>D. All are valid considerations</p>"},{"location":"agile-scrum-simulation-test/#other-things-being-constant-how-does-the-time-to-market-vary-with-the-location-of-the-team-members","title":"Other things being constant, how does the time-to-market vary with the location of the team members?","text":"<p>A. Time-to-market will reduce if a team is dispersed</p> <p>B. Time-to-market will increase if the team is dispersed</p> <p>C. Time-to-market is not impacted by the geographical spread of the team</p> <p>D. It may increase or decrease depending upon the level of communication between the locations</p>"},{"location":"agile-scrum-simulation-test/#agile-techniques-are-based-on-the-well-known-principles-of-empirical-process-control-and-incorporate-many-concepts-from-process-control-theory-what-is-the-best-representation-of-these-principles","title":"Agile techniques are based on the well-known principles of empirical process control, and incorporate many concepts from process control theory. What is the best representation of these principles?","text":"<p>A. Inspect and Adapt</p> <p>B. Deliver frequently</p> <p>C. Plan in detail and execute rapidly</p> <p>D. Introspect and retrospect</p>"},{"location":"agile-scrum-simulation-test/#process-tailoring-and-process-instantiation-are-both-very-common-in-agile-methodologies-which-advocate-being-flexible-about-the-process-to-be-followed-which-of-the-following-best-explains-the-difference-between-the-two","title":"Process tailoring and process instantiation are both very common in Agile methodologies which advocate being flexible about the process to be followed. Which of the following BEST explains the difference between the two?","text":"<p>A. Tailoring introduces new processes and instantiation is implementing a new process</p> <p>B. Tailoring is adapting the processes, instantiation is implementing the adapted processes</p> <p>C. They are the same</p> <p>D. Tailoring scraps existing processes, instantiation maintains status quo</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-is-the-best-role-for-the-project-management-office-to-play-in-an-organization-had-widely-adopted-agile-methodologies","title":"Which of the following is the BEST role for the Project Management Office to play in an organization had widely adopted Agile methodologies?","text":"<p>A. Collate data on the productivity of the teams and establishing organizational capability</p> <p>B. Reporting on the progress of each Agile team and guiding them about how to move closer to goals</p> <p>C. Provide guidelines for taking decisions in an uncertain environment</p> <p>D. Provide an organization-wide standard Agile process for teams to follow</p>"},{"location":"agile-scrum-simulation-test/#a-team-is-trying-to-come-up-with-a-charter-for-its-agile-project-what-is-least-important-for-the-team-at-this-stage","title":"A team is trying to come up with a Charter for its Agile project. What is LEAST important for the team at this stage?","text":"<p>A. Visualizing the customer need to think of the best solution</p> <p>B. Building a solid business case to justify the project</p> <p>C. Maintain the integrity of the Agile process to be followed</p> <p>D. Get maximum possible detail about the product backlog to add clarity to the vision</p>"},{"location":"agile-scrum-simulation-test/#a-sprint-review-is-an-important-meeting-in-the-scrum-methodology-what-is-the-purpose-of-the-sprint-review","title":"A Sprint Review is an important meeting in the Scrum methodology. What is the purpose of the Sprint review?","text":"<p>A. The Scrum master reviews progress and gives guidance about corrective actions</p> <p>B. The team provides a working demonstration of the software and solicits feedback</p> <p>C. The customer and other stakeholders carry out a thorough review of the performance of the team members and provide the feedback to the manager of the team</p> <p>D. The team members introspect on the Sprint that went by and decide on corrective actions</p>"},{"location":"agile-scrum-simulation-test/#a-team-that-has-newly-transitioned-to-scrum-the-product-owner-wants-to-know-the-level-of-detail-he-needs-to-put-in-the-stories-so-that-the-team-can-work-with-them-what-guidance-would-you-give-in-this-regard","title":"A team that has newly transitioned to Scrum. The Product Owner wants to know the level of detail he needs to put in the stories so that the team can work with them. What guidance would you give in this regard?","text":"<p>A. Stories should be as detailed as possible, so that there is no room for ambiguity</p> <p>B. It can be no more than 1 index card in length and the details given in a separate document C. The level of detail should be worked out between the team and the product owner</p> <p>D. Stories can contain less detail, because Agile relies on working software over comprehensive documentation</p>"},{"location":"agile-scrum-simulation-test/#what-are-the-three-main-components-of-an-agile-project-that-determine-the-success-rate-of-the-team","title":"What are the three main components of an Agile project that determine the success rate of the team?","text":"<p>A. Product, Process, People</p> <p>B. Team, Management, Customers</p> <p>C. Planning, Execution, Control</p> <p>D. Value, Risk, Cost</p>"},{"location":"agile-scrum-simulation-test/#which-is-the-correct-formula-for-calculating-the-net-present-value-for-an-agile-project","title":"Which is the correct formula for calculating the Net Present Value for an Agile project?","text":"<p>_A. NPV = ? (I = 0 to N) Net Cash Flow _ (1 + r) -I*</p> <p>B. NPV = ? (I = 0 to N) Net Cash Flow * (1 + r) I</p> <p>C. NPV = ? (I = 0 to N) Net Cash Flow * (1 - r) I</p> <p>D. NPV = ? (I = 0 to N) Net Cash Flow * (1 - r) -I</p>"},{"location":"agile-scrum-simulation-test/#in-the-kano-model-of-prioritization-what-are-the-priorities-that-you-can-assign-to-stories","title":"In the KANO model of prioritization, what are the priorities that you can assign to stories?","text":"<p>A. Must ,Should, Could, Would</p> <p>B. High, Medium, Low</p> <p>C. Threshold, Linear, Exciter</p> <p>D. See if the stated quality level is really needed</p>"},{"location":"agile-scrum-simulation-test/#in-the-moscow-model-of-prioritization-what-does-m-stand-for","title":"In the MoSCoW model of prioritization, what does M stand for?","text":"<p>A. Most</p> <p>B. Minimum</p> <p>C. Maximum</p> <p>D. Must</p>"},{"location":"agile-scrum-simulation-test/#the-project-management-office-in-an-organization-that-has-adopted-agile-regularly-issues-best-practices-and-records-performance-data-they-have-just-published-a-comparison-of-velocity-data-story-points-completed-per-iteration-from-different-teams-as-a-scrum-master-for-one-of-the-teams-what-would-be-your-next-steps","title":"The Project Management Office in an organization that has adopted Agile regularly issues best practices and records performance data. They have just published a comparison of velocity data (story points completed per iteration) from different teams. As a Scrum Master for one of the teams, what would be your next steps?","text":"<p>A. Share this data with the team and discuss with them how to improve its numbers in relation to the rest of the organization</p> <p>B. Write back to the PMO saying we should not be comparing velocities across teams</p> <p>C. Write to the management giving justification for the difference between the organizational benchmark and the figures for your team</p> <p>D. As the team is self-organizing, simply share the data with them and let them figure out what to do</p>"},{"location":"agile-scrum-simulation-test/#you-are-starting-a-new-project-with-a-new-agile-team-which-would-not-be-a-good-approach-to-develop-an-initial-estimation-of-the-teams-velocity","title":"You are starting a new project with a new Agile team. Which would NOT be a good approach to develop an initial estimation of the team's velocity?","text":"<p>A. Take a GUESS</p> <p>B. Run a couple of initial iterations and extrapolate the data</p> <p>C. Use the management's desired velocity as a starting point and go from there</p> <p>D. Use historical data</p>"},{"location":"agile-scrum-simulation-test/#teams-following-feature-driven-development-often-use-a-parking-lot-chart-what-does-a-project-parking-lot-chart-indicate","title":"Teams following Feature driven development often use a Parking Lot chart. What does a Project Parking Lot chart indicate?","text":"<p>A. The features that you have decided to PARK for now for want of prioritization</p> <p>B. The overall backlog of features in the project</p> <p>C. The amount of time a feature is allowed to stay in the backlog before it is automatically removed</p> <p>D. The progress made against each feature being worked on by the team</p>"},{"location":"agile-scrum-simulation-test/#many-organizations-already-have-a-product-manager-role-what-would-it-take-for-a-product-manager-to-become-a-product-owner","title":"Many organizations already have a Product manager role. What would it take for a Product manager to become a Product Owner?","text":"<p>A. A Product Owner needs to spend a lot more time explaining requirements and priorities to the team apart from working with the customers and stakeholders to define requirements</p> <p>B. The roles are identical, there is no difference</p> <p>C. A Product owner needs to develop more of an outward focus to understand stakeholder needs</p> <p>D. A Product owner has more authority over the roadmap than the product manager</p>"},{"location":"agile-scrum-simulation-test/#a-company-is-trying-to-transition-to-agile-and-is-looking-for-a-suitable-project-to-pilot-the-transition-which-one-would-be-the-most-suitable-for-the-pilot","title":"A company is trying to transition to Agile and is looking for a suitable project to pilot the transition. Which one would be the MOST suitable for the pilot?","text":"<p>A. Project A: Estimated duration: 1 year; Team size: 10</p> <p>B. Project B: Estimated duration: 1 month; Team size: 10</p> <p>C. Project C: Estimated duration: 6 months; Team size: 50</p> <p>D. Project D: Estimated duration: 9 months; Team size: 7</p>"},{"location":"agile-scrum-simulation-test/#although-agile-methodologies-give-a-lot-of-flexibility-to-the-team-members-to-tailor-their-processes-teams-are-also-required-to-comply-with-standards-or-regulations-at-the-same-time-which-of-the-following-may-be-reasons-for-bringing-the-compliance-angle-into-agile-projects","title":"Although Agile methodologies give a lot of flexibility to the team members to tailor their processes, teams are also required to comply with standards or regulations at the same time. Which of the following may be reasons for bringing the compliance angle into Agile projects?","text":"<p>A. Federal government mandate</p> <p>B. Quality frameworks like ISO, CMMi</p> <p>C. Customer-dictated process</p> <p>D. All of the above</p>"},{"location":"agile-scrum-simulation-test/#the-primary-output-of-a-sprint-planning-session-is","title":"The primary output of a Sprint Planning session is:","text":"<p>A. Product Backlog</p> <p>B. Release backlog</p> <p>C. Sprint backlog</p> <p>D. All of the above</p>"},{"location":"agile-scrum-simulation-test/#who-were-the-authors-of-the-agile-manifesto","title":"Who were the authors of the Agile manifesto?","text":"<p>A. A group of leaders in the software industry forming the Agile Alliance</p> <p>B. A group of Scrum practitioners forming the Scrum Alliance</p> <p>C. A group of believers in the Crystal methodology led by Alistair Cockburn</p> <p>D. A consortium of software companies led by IBM Rational</p>"},{"location":"agile-scrum-simulation-test/#for-making-a-portfolio-decision-senior-management-wants-to-know-the-approximate-cost-of-a-project-at-what-stage-can-we-estimate-the-cost-of-an-agile-project","title":"For making a portfolio decision, senior management wants to know the approximate cost of a project. At what stage can we estimate the cost of an Agile project?","text":"<p>A. Not until the last iteration, because the backlog is changeable</p> <p>B. It can never be known for sure, because Agile projects are flexible by design</p> <p>C. During release planning, as estimated by the team</p> <p>D. During the business case, created by the Product owner</p>"},{"location":"agile-scrum-simulation-test/#you-are-the-manager-of-an-agile-project-you-find-that-a-particular-stakeholder-is-proving-to-be-a-major-distraction-to-the-team-he-frequently-calls-the-team-to-ask-for-status-get-information-provide-suggestions-and-sometimes-to-request-changes-what-should-you-do-about-this","title":"You are the manager of an Agile project. You find that a particular stakeholder is proving to be a major distraction to the team. He frequently calls the team to ask for status, get information, provide suggestions and sometimes to request changes. What should you do about this?","text":"<p>A. Escalate the issue and keep the stakeholder off-limits</p> <p>B. Invite the stakeholder to the appropriate planning or review meetings and request him to bring up his views at those meetings</p> <p>C. Listen to the stakeholder, but ignore his suggestions</p> <p>D. Tell the stakeholder directly not to disturb the team during the iteration</p>"},{"location":"agile-scrum-simulation-test/#which-statement-best-describes-the-term-self-organized-in-agile","title":"Which statement best describes the term 'Self-Organized' in Agile?","text":"<p>A. A team that has no external dependencies</p> <p>B. A team that can prioritize the backlog independently</p> <p>C. A team that is responsible for making and delivering on its commitments</p> <p>D.A team that does not need a manager to get along</p>"},{"location":"agile-scrum-simulation-test/#how-does-pair-programming-work-in-extreme-programming","title":"How does pair-programming work in Extreme programming?","text":"<p>A. A developer and tester team up to work on a story</p> <p>B. A customer representative and developer jointly work on a requirement</p> <p>C. Tester writes the test as developer writes the code</p> <p>D. Two developers work together on a task</p>"},{"location":"agile-scrum-simulation-test/#during-estimation-process-a-team-first-ordered-the-stories-from-smallest-to-largest-and-then-slotted-them-in-the-appropriate-buckets-of-estimates-small-medium-large-extra-large-which-technique-might-be-getting-used-here","title":"During estimation process, a team first ordered the stories from smallest to largest and then slotted them in the appropriate buckets of estimates (Small, Medium, Large, Extra-Large). Which technique might be getting used here?","text":"<p>A. Story pointing</p> <p>B. Affinity estimating</p> <p>C. Parametric estimation</p> <p>D. Expert estimation</p>"},{"location":"agile-scrum-simulation-test/#a-team-is-experiencing-a-lot-of-conflicts-breaking-out-what-is-the-best-statement-you-can-make-about-conflict-management-in-agile","title":"A team is experiencing a lot of conflicts breaking out. What is the best statement you can make about conflict management in Agile?","text":"<p>A. Conflicts are dangerous in Agile and must be prevented at source</p> <p>B. You must try your best to evolve consensus in all circumstances</p> <p>C. Conflicts may be healthy as long as they are resolved in a way that enhances trust and collaboration</p> <p>D. The Manager must act as the arbitrator in such conflicts to ensure satisfactory resolution</p>"},{"location":"agile-scrum-simulation-test/#what-is-the-primary-role-of-a-product-owner-on-an-agile-team","title":"What is the primary role of a Product Owner on an Agile team?","text":"<p>A. To staff up the team and ensure that the morale of the team is good</p> <p>B. To manage the delivery of the software to the customer in a timely manner</p> <p>C. To estimate the size of the requirements</p> <p>D. To coordinate with the team to ensure they are working on items that are valuable to the customer</p>"},{"location":"agile-scrum-simulation-test/#a-team-is-finding-it-difficult-to-comprehend-story-points-and-continues-to-use-ideal-days-to-estimate-which-of-the-following-statements-would-you-make-to-convince-the-team-about-the-value-of-story-points-as-a-measure-of-size","title":"A team is finding it difficult to comprehend Story points and continues to use Ideal days to estimate. Which of the following statements would you make to convince the team about the value of Story points as a measure of size?","text":"<ul> <li>I- Story points drive cross-functionality in the team</li> <li>II- Story point estimates do not decay with time</li> <li>III- Estimating in story points can be faster</li> <li>IV- Story points is a pure measure</li> </ul> <p>A. I and II only.</p> <p>B. I and III only</p> <p>C. I, II and IV only</p> <p>D. I, II, III and IV</p>"},{"location":"agile-scrum-simulation-test/#the-objective-of-a-lean-methodology-with-respect-to-work-in-progress-is-to","title":"The objective of a Lean methodology with respect to work-in-progress is to?","text":"<p>A. Maximize WIP</p> <p>B. Minimize WIP</p> <p>C. High WIP for larger teams, otherwise Low WIP</p> <p>D. Neutral to WIP considerations</p>"},{"location":"agile-scrum-simulation-test/#what-is-a-risk-burndown-chart","title":"What is a risk-burndown-chart?","text":"<p>A. It plots the risk exposure against time for the duration of the project</p> <p>B. It explains how to address the riskiest requirements first</p> <p>C. It indicates whether all the risks have been successfully identified or not</p> <p>D. It helps prioritize which risks to ignore and which to plan for</p>"},{"location":"agile-scrum-simulation-test/#your-organization-has-out-sourced-work-to-a-different-organization-which-follows-agile-methodologies-as-the-leader-of-the-customer-organization-which-of-the-following-is-not-your-responsibility","title":"Your organization has out-sourced work to a different organization which follows Agile methodologies. As the leader of the customer organization, which of the following is NOT your responsibility?","text":"<p>A. Ensuring that the right requirements are given</p> <p>B. Ensuring that the requirements are drawn from a wide spectrum of users</p> <p>C. Ensuring that clarifications about requirements are given in a timely manner</p> <p>D. Ensuring that the vendor follows the Agile methodology correctly</p>"},{"location":"agile-scrum-simulation-test/#what-is-the-best-way-to-facilitate-communication-between-a-pair-of-developers-who-are-pair-programming","title":"What is the best way to facilitate communication between a pair of developers who are pair programming?","text":"<p>A. Put them in the same office</p> <p>B. Put them in adjacent cubicles</p> <p>C. Buy video cameras to facilitate video chats</p> <p>D. Send them for communication skills training</p>"},{"location":"agile-scrum-simulation-test/#while-reading-a-business-case-for-a-project-to-release-a-new-version-of-a-software-product-you-find-that-one-of-the-figures-mentioned-in-the-document-is-incremental-revenue-what-is-incremental-revenue","title":"While reading a business case for a project to release a new version of a software product, you find that one of the figures mentioned in the document is 'Incremental Revenue'. What is incremental revenue?","text":"<p>A. Additional revenue from expansion in Sales</p> <p>B. Getting additional revenue by up-selling to existing customers</p> <p>C. Revenue from annual maintenance contracts</p> <p>D. A concept that emphasizes constantly growing revenues</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-is-not-a-feature-of-teams-practicing-extreme-programming","title":"Which of the following is NOT a feature of teams practicing Extreme Programming?","text":"<p>A. Onsite Customer</p> <p>B. 40 hour work weeks</p> <p>C. Test-driven development</p> <p>D. Ability to scale to large teams</p>"},{"location":"agile-scrum-simulation-test/#at-the-end-of-the-iteration-a-team-which-committed-to-delivering-68-story-points-ended-up-not-delivering-anything-what-could-be-the-most-likely-cause-of-this","title":"At the end of the iteration, a team which committed to delivering 68 Story Points ended up not delivering anything. What could be the MOST LIKELY cause of this?","text":"<p>A. Most of the team members went on vacation</p> <p>B. The team was not self-organized</p> <p>C. The Scrum Master did not manage the team well</p> <p>D. The definition of done defined by the team was too stringent</p>"},{"location":"agile-scrum-simulation-test/#dsdm-uses-a-variant-of-the-pareto-principle-to-guide-the-development-process-which-of-the-following-best-expresses-how-the-principle-might-be-used-in-this-context","title":"DSDM uses a variant of the Pareto principle to guide the development process. Which of the following BEST expresses how the principle might be used in this context?","text":"<p>A. 20% of the features can deliver 80% of the value</p> <p>B. 20% of the value comes from 80% of the features</p> <p>C. 20% of the team delivers 80% of the work</p> <p>D. 20% causes result in 80% of project failures</p>"},{"location":"agile-scrum-simulation-test/#a-product-owner-along-with-the-team-has-categorized-the-items-in-the-product-backlog-in-terms-of-value-and-risk-they-decide-to-work-on-high-value-and-high-risk-items-first-high-value-and-low-risk-next-followed-by-low-value-and-low-risk-what-should-be-done-about-the-low-value-and-high-risk","title":"A Product Owner along with the team has categorized the items in the product backlog in terms of Value and Risk. They decide to work on High Value and High risk items first, High Value and Low Risk next, followed by Low Value and Low risk. What should be done about the Low Value and High risk?","text":"<p>A. Do them last</p> <p>B. Find ways to increase the value or reduce the risk</p> <p>C. Do not work on them</p> <p>D. Run some pilots to validate the assumptions about value and risk</p>"},{"location":"agile-scrum-simulation-test/#a-team-is-wondering-whether-they-should-use-off-the-shelf-components-share-ware-or-free-ware-components-instead-of-developing-them-from-scratch-what-technique-in-agile-project-management-will-be-useful-to-make-that-determination","title":"A team is wondering whether they should use off-the-shelf components, share-ware or free-ware components instead of developing them from scratch. What technique in Agile project management will be useful to make that determination?","text":"<p>A. De-Bono's 6 thinking hats</p> <p>B. Planning Poker</p> <p>C. Make-or-buy-analysis</p> <p>D. Wide-band Delphi technique</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-best-represents-the-expected-outcome-of-a-release-planning-meeting","title":"Which of the following BEST represents the expected outcome of a release planning meeting?","text":"<p>A. A detailed plan with identified deliverables and dependencies, budget reconciled with timelines, constitution of a change-control board to manage scope changes.</p> <p>B. Detailed Cost, Time, Quality plan, along with exhaustive set of risks identified</p> <p>C. An aggressive plan that sets tough internal goals and sufficient buffer for external goals</p> <p>D. A set of stories and epics planned to be delivered during the release, allocated to iterations and a high-level design or approach</p>"},{"location":"agile-scrum-simulation-test/#the-customer-of-an-agile-project-requires-detailed-and-frequent-reports-about-the-progress-of-the-team-what-means-would-you-use-to-achieve-this","title":"The customer of an Agile project requires detailed and frequent reports about the progress of the team. What means would you use to achieve this?","text":"<p>A. Information radiators</p> <p>B. Formal documentation</p> <p>C. Informal information, delivered via email or telephone</p> <p>D. All of the above</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-is-a-characteristic-of-meetings-in-agile-projects-as-opposed-to-conventional-projects","title":"Which of the following is a characteristic of meetings in Agile projects as opposed to conventional projects?","text":"<p>A. Transitioning to Agile leads to a lot of meetings. While planning such a project, one must make sure to allocate sufficient time for such meetings</p> <p>B. Agile meetings are time-boxed and have a fixed agenda</p> <p>C. Side discussions are not allowed in any Agile meeting</p> <p>D. Agile recommends notes from each meeting are collected and diligently followed up</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-is-most-true-about-agile-methodologies","title":"Which of the following is MOST true about Agile methodologies:","text":"<p>A. It is the same as Lean principles; focusing on eliminating waste</p> <p>B. They include an incremental and iterative life-cycle for software development</p> <p>C. They rely on pull-based systems to deliver the product sooner</p> <p>D. It requires people to be co-located</p>"},{"location":"agile-scrum-simulation-test/#the-ideal-size-of-a-scrum-team-is","title":"The ideal size of a Scrum team is:","text":"<p>A. 5 to 9</p> <p>B. 3 to 21</p> <p>C. 10 to 12</p> <p>D. 9 to 11</p>"},{"location":"agile-scrum-simulation-test/#the-scrum-team-consists-of","title":"The 'Scrum Team' consists of:","text":"<p>A. Team, Scrum Master and Customer</p> <p>B. Team, Manager and Customer</p> <p>C. Team, Leads and Architect</p> <p>D. Team, Scrum Master and Product Owner</p>"},{"location":"agile-scrum-simulation-test/#during-iteration-planning-a-team-committed-to-implement-10-stories-coding-has-been-completed-and-basic-regression-tests-are-passing-there-are-12-bugs-pending-some-of-them-are-blocking-few-tests-that-execute-some-of-the-paths-in-the-story-the-fixes-for-these-bugs-were-checked-in-on-the-last-day-of-the-iteration-but-they-have-not-been-tested-in-such-a-scenario-the-iteration-is","title":"During iteration planning, a team committed to implement 10 stories. Coding has been completed and basic regression tests are passing. There are 12 bugs pending. Some of them are blocking few tests that execute some of the paths in the story. The fixes for these bugs were checked in on the last day of the iteration, but they have not been tested. In such a scenario, the iteration is:","text":"<p>A. Successful, because the basic functionality is implemented and is working</p> <p>B. Unsuccessful, because the tests have not all passed and few tests are still blocked</p> <p>C. Successful or unsuccessful depending upon the 'done criterion' decided by the team</p> <p>D. Successful if the customer accepts it</p>"},{"location":"agile-scrum-simulation-test/#the-manager-of-a-scrum-team-is-also-playing-the-role-of-a-scrum-master-which-of-the-following-things-should-he-stop-doing","title":"The manager of a Scrum team is also playing the role of a Scrum Master. Which of the following things should he stop doing?","text":"<p>A. Protect the team from disturbances</p> <p>B. Do performance appraisals for the team</p> <p>C. Make sure that all t he required tasks are assigned and being worked on</p> <p>D. Think about growing the company's business</p>"},{"location":"agile-scrum-simulation-test/#the-three-pillars-of-scrum-theory-are","title":"The three pillars of Scrum theory are:","text":"<p>A. Customer value, Architectural purity, Management ownership</p> <p>B. Transparency, Inspection, Adaptation</p> <p>C. Design, Development, Testing</p> <p>D. Standup, Retrospective, Backlog grooming</p>"},{"location":"agile-scrum-simulation-test/#in-which-of-the-following-meetings-can-design-be-discussed","title":"In which of the following meetings can design be discussed?","text":"<p>A. Daily standup meeting</p> <p>B. Review meeting</p> <p>C. Retrospective meeting</p> <p>D. Iteration Planning meeting</p>"},{"location":"agile-scrum-simulation-test/#which-of-the-following-is-not-an-essential-attribute-of-an-agile-team","title":"Which of the following is NOT an essential attribute of an Agile Team?","text":"<p>A. Self-Managing</p> <p>B. Cross-functional</p> <p>C. Co-located</p> <p>D. Capable of delivering a potentially shippable product</p>"},{"location":"agile-scrum-simulation-test/#who-in-an-agile-team-can-provide-inputs-for-creating-a-backlog","title":"Who in an Agile team can provide inputs for creating a backlog?","text":"<p>A. Product owner</p> <p>B. Team</p> <p>C. Customer</p> <p>D. All of the above</p>"},{"location":"agile-scrum-simulation-test/#who-can-give-directions-to-the-team-in-terms-of-list-of-items-to-work-on","title":"Who can give directions to the team in terms of list of items to work on?","text":"<p>A. Product Owner</p> <p>B. Scrum Master</p> <p>C. Customer</p> <p>D. None of the above</p>"},{"location":"better-go-to-bed-earlier/","title":"Better Go to Bed Earlier","text":"<p>I exported my data from Fitbit and used a little bit of Python to inspect my sleep records. The code is available on GitHub.</p>"},{"location":"better-go-to-bed-earlier/#what-time-do-i-usually-go-to-bed","title":"What time do I usually go to bed?","text":"<p>I rarely go to bed before midnight and data says so.</p> <p></p>"},{"location":"better-go-to-bed-earlier/#further-breakdown-by-year","title":"Further Breakdown by Year","text":"<p>Looks like I stayed up late most of the time in 2021.</p> <p></p>"},{"location":"a-decade-in-review-2019/","title":"A Decade in Review - 2019","text":"<p>The 2010s decade in review</p> <ul> <li> <p>finished grad school \ud83d\udc68\u200d\ud83c\udf93</p> </li> <li> <p>joined startup with friends and failed \ud83d\ude14</p> </li> <li> <p>studied PhD \ud83e\udd39\u200d\u2642\ufe0f</p> </li> <li> <p>published some papers \ud83d\udcc4</p> </li> <li> <p>moved to Canada \ud83c\udf41</p> </li> <li> <p>found a job to be a NLP specialist \ud83d\udc68\u200d\ud83d\udcbb</p> </li> <li> <p>got married \ud83d\udc91</p> </li> <li> <p>bought a house \ud83c\udfe1</p> </li> <li> <p>switched jobs to be a Software Developer \ud83d\udc68\u200d\ud83d\udcbb</p> </li> <li> <p>had a baby girl \ud83d\udc67</p> </li> <li> <p>switched jobs to be a Data Scientist \ud83d\udc68\u200d\ud83d\udcbb</p> </li> <li> <p>had a baby boy \ud83d\udc66</p> </li> </ul> <p>Look forward to 2020s \ud83d\udc68\u200d\ud83d\udc69\u200d\ud83d\udc67\u200d\ud83d\udc66 \ud83d\ude03</p>"},{"location":"dynamic-programming-examples/","title":"Dynamic Programming Examples","text":"<p>Two simple examples from LeetCode to illustrate the idea of Dynamic Programming</p>"},{"location":"dynamic-programming-examples/#dynamic-programming","title":"Dynamic Programming","text":"<p>The idea of Dynamic Programming is to solve a problem by resolving its sub-problems over and over.</p> <p>Let's use Fibonacci sequence (0, 1, 1, 2, 3, 5, 8, 13, ...) as an example. We know that $F(n)$ = $F(n-1)$ + $F(n-2)$.</p> <p>In other words, to solve $F(n)$ we need the value of $F(n-1)$ and $F(n-2)$, which leads to finding $F(n-2)$, $F(n-3)$, $F(n-4)$, $F(n-5)$, over and over.</p> <p>When it comes to $F(0)$ and $F(1),$ we have $F(0)=$0 and $F(1)=$1.</p> <p>Hence, we can cast the problem into a \"table fulfilling\" tasks (memorizing the optimal values of sub-problems.)</p> <p>Let's solve the Fibonacci number problem when n = 6.</p> <p>I first initialize a array (1x7 table).</p> n 0 1 2 3 4 5 6 F(n) 0 1 <p>Then compute n = 2</p> n 0 1 2 3 4 5 6 F(n) 0 1 1 <p>Then compute n = 3</p> n 0 1 2 3 4 5 6 F(n) 0 1 1 2 <p>...</p> <p>Then compute n = 6</p> n 0 1 2 3 4 5 6 F(n) 0 1 1 2 3 5 8"},{"location":"dynamic-programming-examples/#the-problems","title":"The problems","text":"<p>The Fibonacci number problem may be too simple. Let's take a look at two exmaples from LeetCode.</p> <p>1. House Robber (LeetCode 198): Houses in a row</p> <p>You are a professional robber planning to rob houses along a street. Each house has a certain amount of money stashed, the only constraint stopping you from robbing each of them is that adjacent houses have security system connected and it will automatically contact the police if two adjacent houses were broken into on the same night. Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.</p> <p>2. House Robber II (LeetCode 213): Houses in a circle</p> <p>After robbing those houses on that street, the thief has found himself a new place for his thievery so that he will not get too much attention. This time, all houses at this place are arranged in a circle. That means the first house is the neighbor of the last one. Meanwhile, the security system for these houses remain the same as for those in the previous street. Given a list of non-negative integers representing the amount of money of each house, determine the maximum amount of money you can rob tonight without alerting the police.</p>"},{"location":"dynamic-programming-examples/#solution","title":"Solution","text":"<p>Let's use [1, 2, 5, 3, 9, 3, 2] as an example to represent the values (always greater than 0) of the houses.</p> <p>Situation 1: Houses in a row</p> <p>G(n) denotes the optimal gain after robbing house n.</p> <p>First I initialize the table as follows.</p> <ul> <li>G(0) means no gain if there's no house to rob.</li> <li>G(1) means always robbing the house if there's only one.</li> </ul> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 <p>Therefore, after robbing the n th house, the optimal gain is to choose the following:</p> <ol> <li>robbing the n-2 th house and the current house</li> <li>robbing the n-1 th house and but not the current house</li> </ol> <p>Or using the notation: G(n) = max( G(n-1), G(n-2)+V(n) )</p> <p>Then compute n = 2</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 <p>Then compute n = 3</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 6 <p>Then compute n = 4</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 6 6 <p>Then compute n = 5</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 6 6 15 <p>Then compute n = 6</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 6 6 15 <p>Then compute n = 7</p> n 0 1 2 3 4 5 6 7 V(n) 0 1 2 5 3 9 3 2 G(n) 0 1 2 6 6 15 15 17 <p></p> <p>Situation 2: Houses in a circle</p> <p>This is a variation of Situation 1. Let's think this way.</p> <ol> <li>if we begin robbing from the first house, we can not rob the last one since it's next to the first one</li> <li>if we want to rob the last house, we can begin robbing from the second one so that alarm will not be triggered</li> </ol> <p>whichever way from the above gives the larger gain, the robber follows</p> <p>Therefore we can reuse the codes from Situation 1.</p>"},{"location":"dynamic-programming-examples/#implementation","title":"Implementation","text":"<p>Both submissions are Accepted</p>"},{"location":"endianness-and-bit-masking/","title":"Endianness and Bit Masking","text":"<p>How to handle some bit level data manipualtions in Python</p>"},{"location":"endianness-and-bit-masking/#endianness","title":"Endianness","text":"<p>See this wiki for background knowledge about endianness. It refers to the ordering of bytes.</p> <ul> <li>Big endianness is to store with the most significant bit coming first.</li> <li>Little endianness is to store in the opposite order where the most significant bit comes last.</li> </ul> <p>For example, we have a hex number 0A0B0C0D</p> <p>Note that endianness talks about the order of bytes</p> <p>0A0B0C0D should be separated into chunks with size of 8 bits</p> <p>that is, 0A | 0B | 0C | 0D</p> <p>In big endianness, it shall be written as 0A0B0C0D</p> <p>In little endianness, it shall be written as 0D0C0B0A</p>"},{"location":"endianness-and-bit-masking/#python","title":"Python","text":"<p>Python provides a handy library (struct) to handle such conversion. See here for detail.</p> <p>Explanation:</p> <p>Say, we want to create the big/little endian representation for three numbers: 1025, 2050, and 4099</p> <p>1025 = 1024 + 1, written in hex, it is 0x0401</p> <p>2050 = 2048 + 2, written in hex, it is 0x0802</p> <p>4099 = 4096 + 3, written in hex, it is 0x1003</p> <p>Using struct, we can pack these numbers with a formatted string \"&gt;hhh\" or \"&gt;3h\"</p> <ul> <li>&gt; means big endian</li> <li>h means short int, which is 2 byte or 16 bit</li> </ul> <p>Similarly, we can pack those numbers with a formatted string \"&lt;hhh\" or \"&lt;3h\"</p> <ul> <li>&lt; means little endian</li> </ul> <p>Therefore, these three numbers are represented:</p> <ul> <li>in big endian, 040108021003</li> <li>in little endian, 010402080310</li> </ul> <p>In order to extract the numbers, we use unpack with the corresponding formatted string</p>"},{"location":"endianness-and-bit-masking/#bit-masking","title":"Bit Masking","text":"<p>Bit level and/or/xor manipulations</p> <p>and, take certain bits</p> <p>or, set certain bits</p> <p>xor, toggle certain bits</p> <p>For example, 1025 which is 0b10000000001</p> <p>take last two bits: 1025 &amp; 0b11 = 0b1</p> <p>set last two bits: 1025 | 0b11 = 0b10000000111 = 1031</p> <p>toggle last two bits: 1025 ^ 0b11 = 0b10000000110 = 1030</p>"},{"location":"rework-github-page-with-gatsbyjs/","title":"Rework GitHub Page with Gatsbyjs","text":"<p>Late to the party. I am reworking my GitHub Pages with Gatsbyjs. It is based on gatsby-starter-blog.</p>"},{"location":"get-started-on-data-science-projects/","title":"Get Started on Data Science Projects","text":"<p>Workflow on a data science project from idea to deploy. See the Python package on https://pypi.org/project/ez-address-parser/</p>"},{"location":"get-started-on-data-science-projects/#idea","title":"Idea","text":"<p>Let's make a Canadian postal address parser that can recognize different parts in an address line, say a street number, street name, or postal code. Some address parsers use pattern matching. But it's difficult for them to cover all possible cases of how address lines are written by a human. For example, some addresses may contain unit numbers and some do not. For those addresses with unit numbers, the unit numbers may come in different places.</p> <p>There must be a way to apply machine learning techniques to learn the possible transitions from different parts of address information and generate labels sequentially.</p>"},{"location":"get-started-on-data-science-projects/#data","title":"Data","text":"<p>I crawled some Canadian postal addresses from opendatacanada.com (this site is down now) a while back. To my best knowledge, those are corporate addresses in different provinces across Canada. The data is stored in raw test per province. In this project, I only take 10 addresses apiece from each province to generate a seed dataset for annotation.</p>"},{"location":"get-started-on-data-science-projects/#git-init","title":"Git init","text":"<p>First things first, I will create a Git repo for this project. And I intend to use my cookiecutter template for Python package as a starting point to avoid working from scratch. The template is minimal. However, it does show my preferences in Python development. Such as using <code>vscode</code> as the go-to editor, <code>markdown</code> for package's long description, <code>black</code> for linting, <code>pytest</code> for testing, and <code>setuptools_scm</code> for package version control by Git tags.</p> <pre><code>python -m cookiecutter gh:zehengl/cookiecutter-py-package\n</code></pre> <p>Then, I can create a virtual envrionment for this project.</p> <pre><code>python -m venv venv\n</code></pre> <p>Again I prefer to use <code>venv</code> since it's already included the standard library.</p>"},{"location":"get-started-on-data-science-projects/#annotation","title":"Annotation","text":"<p>It's time to get hands dirty on labeling whatever data we have. I came across a new Python package called <code>label-studio</code> which provides an easy-to-use labeling tool for many tasks, e.g., named entity recognition, bounding box, and classification. To know more about this project, please check out this link.</p> <pre><code>pip install label-studio\n</code></pre> <p>After installation, I initialized a labeling project named <code>ez_address_annotator</code> and configured the labels.</p> <pre><code>label-studio init ez_address_annotator\n</code></pre> <p>The labels are defined in a xml file <code>config.xml</code>.</p> <pre><code>&lt;View&gt;\n  &lt;Labels name=\"ner\" toName=\"address\"&gt;\n    &lt;Label value=\"StreetNumber\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"StreetName\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"StreetType\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"StreetDirection\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"Municipality\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"Province\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"PostalCode\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"GDIndicator\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"AdditionalInfo\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"Building\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"BuildingNumber\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"PostalBox\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"PostalBoxNumber\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"Station\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"StationNumber\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"RuralRoute\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"RuralRouteNumber\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"Unit\"&gt;&lt;/Label&gt;\n    &lt;Label value=\"UnitNumber\"&gt;&lt;/Label&gt;\n  &lt;/Labels&gt;\n  &lt;Text name=\"address\" value=\"$address\"&gt;&lt;/Text&gt;\n&lt;/View&gt;\n</code></pre> <p>Run some utility scripts to generate seed data. Then I can start the web interface for labeling, import <code>seed.csv</code> under <code>ez_address_annotator/data</code>, and have fun labeling the seed data set.</p> <pre><code>python ez_address_annotator/data/convert.py\npython ez_address_annotator/data/create_seed.py\nlabel-studio start ez_address_annotator\n</code></pre> <p>This is how it looks when labeling. <code>label-studio</code> provides a friendly interface.</p> <p></p>"},{"location":"get-started-on-data-science-projects/#pretrained-model","title":"Pretrained Model","text":"<p>Strong hints in Idea suggest that I consider address parsing as a named entity recognition task. Hence I choose Conditional random field to learn from the annotated address data.</p> <p>The cross validation achieves about 90% f-score, which looks good to me.</p> <p>Top likely transitions:</p> weight label_from label_to 7.552 StreetNumber StreetName 6.333 Building BuildingNumber 5.815 RuralRoute RuralRouteNumber 5.763 Municipality Province 5.481 StreetName StreetType 5.142 PostalBox PostalBoxNumber 4.839 Station StationNumber 4.815 Building Building 3.835 Unit UnitNumber <p>Top unlikely transitions:</p> weight label_from label_to -0.270 PostalBoxNumber Building -0.304 StreetName StreetNumber -0.385 Unit Municipality -0.505 AdditionalInfo Municipality -0.592 StreetName PostalBox -0.789 StreetName Province -0.791 StreetType Province -0.988 StreetType StreetType -1.202 StreetNumber Municipality -1.621 Province Municipality"},{"location":"get-started-on-data-science-projects/#deploy","title":"Deploy","text":"<p>The final step is to publish a reusable python package on PyPi with the pretrained model.</p> <p>To begin with, make sure the latest <code>setuptools</code> and <code>wheel</code> packages are available.</p> <pre><code>pip install -U setuptools wheel\n</code></pre> <p>Build the distribution archive and wheel files.</p> <pre><code>python setup.py sdist bdist_wheel\n</code></pre> <p>Next, we install the latest <code>twine</code> package to upload the distribution files to PyPi.</p> <pre><code>pip install -U twine\n</code></pre> <p>For testing purpose, we can use TestPyPI.</p> <pre><code>python -m twine upload --repository-url https://test.pypi.org/legacy/ dist/*\n</code></pre> <p>In order to test the package from TestPyPI, specify the repo url using <code>pip</code></p> <pre><code>pip install --index-url https://test.pypi.org/simple/ ez-address-parser\n</code></pre> <p>Everything works as expected. Now we can upload to the live PyPi.</p> <pre><code>python -m twine upload dist/*\n</code></pre> <p>Ta-Da! The <code>ez-address-parser</code> package is now available on PyPi and can be installed like any other packages</p> <pre><code>pip install ez-address-parser\n</code></pre>"},{"location":"get-started-on-data-science-projects/#final-words","title":"Final Words","text":"<p>The project is open sourced on GitHub. Feel free to check out the codes.</p>"},{"location":"how-to-pip-install-mysqlclient-on-macos/","title":"How to pip install mysqlclient on macOS","text":"<p>Some tweaks to pip install MYSQL-python/mysqlclient on macOS, without installing mysql</p>","tags":["pip"]},{"location":"how-to-pip-install-mysqlclient-on-macos/#background","title":"Background","text":"<p>Some projects require MYSQL-python or mysqlclient to access a mysql database. And let's say that mysql db is not local or running on a docker container or a virtual machine. And you don't definitely need to have a running mysql instance on your local/host environment.</p> <p>When you pip install the dependencies, it's likely that you will encounter these two errors:</p> <ul> <li><code>EnvironmentError: mysql_config not found</code></li> <li><code>IndexError: string index out of range</code></li> </ul>","tags":["pip"]},{"location":"how-to-pip-install-mysqlclient-on-macos/#i-prefer-not-to-do-this","title":"I prefer not to do this","text":"<p>If you read StackOverflow, some guys say <code>brew install mysql</code> would work. Yes, no doubt, it works. But I wouldn't do that because I don't need mysql. I just want to connect to a mysql database.</p>","tags":["pip"]},{"location":"how-to-pip-install-mysqlclient-on-macos/#solution","title":"Solution","text":"<p>see mysqlclient-python issue #169</p> <ul> <li>You would need the mysql connector</li> </ul> <p><code>brew install mysql-connector-c</code></p> <ul> <li>Modify mysql_config in /usr/local/bin/mysql_config</li> </ul> <pre><code># Create options\nlibs=\"-L$pkglibdir\"\nlibs=\"$libs -l \"\n</code></pre> <p>should become:</p> <pre><code># Create options\nlibs=\"-L$pkglibdir\"\nlibs=\"$libs -lmysqlclient -lssl -lcrypto\"\n</code></pre> <ul> <li>Set environment variables</li> </ul> <p><code>brew info openssl</code> would tell you what's needed</p> <pre><code>For compilers to find this software you may need to set:\n    LDFLAGS:  -L/usr/local/opt/openssl/lib\n    CPPFLAGS: -I/usr/local/opt/openssl/include\nFor pkg-config to find this software you may need to set:\n    PKG_CONFIG_PATH: /usr/local/opt/openssl/lib/pkgconfig\n</code></pre> <p>You should be all set.</p>","tags":["pip"]},{"location":"simple-web-scraper/","title":"Simple Web Scraper","text":"<p>A simple web scraper to crawl address data from OpenDataCanada</p>","tags":["python"]},{"location":"simple-web-scraper/#source","title":"Source","text":"<ul> <li>OpenDataCanada Data Explorer</li> </ul>","tags":["python"]},{"location":"simple-web-scraper/#package","title":"Package","text":"<ul> <li>requests: Best http library</li> <li>beautifulsoup: Super easy-to-use site scraping library</li> <li>time: Be a good netizen and use time.sleep()</li> <li>codecs: Deal with french chracters (well, I am scraping addresses in Canada)</li> </ul>","tags":["python"]},{"location":"simple-web-scraper/#analysis","title":"Analysis","text":"<p>The corporation page lists many areacodes which link to pages that store the addresses information. Take a look at one of the links, Federal Corporations H3B. The information we want locates in the table rows (tr).</p> <p>With the help of \"Inspect\", we can conclude the structure:</p> <ol> <li>The base url is \"http://opendatacanada.com/corporation.php\"</li> <li>Areacodes are list items (li) that placed within <code>&lt;ul class=\"list-inline\"&gt;</code>. The first \"ul\" is a list of province abbrs. The last \"ul\" is a list of random links.</li> <li>For each address page, access the base url with parameter \"postal=xxx\", where xxx is an areacode</li> <li>Addresses are table rows (tr)</li> </ol>","tags":["python"]},{"location":"simple-web-scraper/#code","title":"Code","text":"<p>Following is my Python2.7 script, less than 40 lines.</p> <pre><code>import requests\nfrom bs4 import BeautifulSoup\nimport time\nimport codecs\nr = requests.get('http://opendatacanada.com/corporation.php')\nparsed*html = BeautifulSoup(r.content, 'html.parser')\nprovinces = parsed_html.find_all('ul', class*='list-inline')[1:-2]\nnum*prov = 0\nnum_area = 0\nnum_addr = 0\nfor p in provinces:\nwith codecs.open('province*'+str(num*prov), 'wb', 'utf-8') as f:\nareacodes = p.find_all('li')\nfor * in areacodes:\na = _.contents[1].contents[0].split()[0].strip()\nlink = 'http://opendatacanada.com/corporation.php?postal='+a\nprint 'Extracting', link\nr = requests.get(link)\nparsed_html = BeautifulSoup(r.content, 'html.parser')\naddresses = parsed_html.find_all('tr')\nfor _ in addresses:\ntry:\naddr = _.contents[3].contents[0] + ', ' + \\\n                    _.contents[5].contents[0]\nf.write(addr + '\\n')\nnum_addr += 1\nexcept:\npass\nnum_area += 1\ntime.sleep(.5)\nnum_prov += 1\nprint 'Result:'\nprint num_prov, 'provinces'\nprint num_area, 'areacodes'\nprint num_addr, 'addresses'\n</code></pre>","tags":["python"]},{"location":"string-to-qr-code/","title":"String to QR Code","text":"<p>Setup a webapp to generate QR code. Demo available at https://ez-qrcode-generator.herokuapp.com/</p>"},{"location":"string-to-qr-code/#the-design","title":"The Design","text":"<p>One liner:</p> <ul> <li>the webapp should allow users to type in some text and convert text to QR code</li> </ul> <p>UI cannot be simpler:</p> <ul> <li>A label</li> <li>A text input field</li> <li>A submit button</li> </ul>"},{"location":"string-to-qr-code/#the-technology","title":"The Technology","text":"<p>Life is short, use Python</p> <ul> <li>flask</li> <li>python-qrcode</li> </ul>"},{"location":"string-to-qr-code/#the-implementation","title":"The Implementation","text":"<p>See GitHub repo.</p> <ul> <li> <p>python-qrcode does all the dirty work to generate QR code from string</p> </li> <li> <p>flask serves a webapp with only one endpoint, it returns the form upon GET and displays the QR code image upon POST</p> </li> <li> <p>the flask snippet shows how to avoid creating a temp file for the image</p> </li> </ul>"},{"location":"string-to-qr-code/#the-deploy","title":"The Deploy","text":"<p>Deploying this simple MVP to Heroku is easy.</p>"},{"location":"string-to-qr-code/#runtimetxt","title":"runtime.txt","text":"<p><code>python-3.7.3</code> specifies the python version</p>"},{"location":"string-to-qr-code/#requirementstxt","title":"requirements.txt","text":"<p><code>pip freeze</code> the dependencies to a requirements.txt file</p>"},{"location":"string-to-qr-code/#procfile","title":"Procfile","text":"<p>Create a Procfile to declare it as a web app served by gunicorn <code>web: gunicorn app:app --log-file=-</code></p> <p>See Getting Started on Heroku with Python for more info.</p>"},{"location":"string-to-qr-code/#the-demo","title":"The Demo","text":"<p>Demo available at ez-qrcode-generator.herokuapp.com</p> <p>Interesting use case includes:</p>"},{"location":"string-to-qr-code/#set-up-wifi-networkpassword","title":"Set up wifi network/password","text":"<p>Use the template <code>WIFI:T:WPA;S:&lt;network&gt;;P:&lt;password&gt;;;</code> where <code>&lt;network&gt;</code> and <code>&lt;password&gt;</code> are your network's name and password respectively</p>"},{"location":"super-bowl-li/","title":"Super Bowl LI","text":"<p>Something about roman numerals, inspired by Super Bowl LI</p>"},{"location":"super-bowl-li/#why","title":"Why","text":"<p>Cheer out for the Patriots and Falcons fans! I am excited about this year's super bowl. Will Tom Brady win his FIFTHS or Matt Ryan finish strong for his amazing season?</p> <p>When I was watching the conference finals on Sunday afternoon, my wife asked \"why your name is with super bowl\". For a second I was like, with a Nick Young face, \"what?\" Then I realized she was referring to \"SB LI\" and replied \"that's roman 51\".</p>"},{"location":"super-bowl-li/#why-contd","title":"Why Cont'd","text":"<p>Answering why NFL uses roman numerals is not the main concern of this post. Clearly roman numerals should be easy to understand in early days but they may get complex later. For example, what does <code>XXXVIII</code> stand for or what is 39 in roman numeral?</p> <p>If you can tell within a blink. TL;DR</p>"},{"location":"super-bowl-li/#roman-numerals","title":"Roman Numerals","text":"<p>Let's begin with a chart for roman numerals</p> Roman Numeral Integer <code>I</code> 1 <code>V</code> 5 <code>X</code> 10 <code>L</code> 50 <code>C</code> 100 <code>D</code> 500 <code>M</code> 1000 <p>Alrighty. This makes sense. How about the values in between?</p>"},{"location":"super-bowl-li/#how-to-read","title":"How to Read","text":"<p>Let's begin with the simple cases.</p> Roman Numeral Integer <code>I</code> 1 <code>II</code> 2 <code>III</code> 3 <code>IV</code> 4 <code>V</code> 5 <code>VI</code> 6 <code>VII</code> 7 <code>VIII</code> 8 <code>IX</code> 9 <code>X</code> 10 <p>Rules:</p> <ol> <li> <p>A roman numeral is written left to right.</p> </li> <li> <p>Values are added left to right if former letter is no smaller than the latter one.</p> </li> </ol> <p>See <code>II</code> (2), <code>VII</code> (7)</p> <ol> <li>If the former is smaller, discard the previous added value and subtract the former from then the latter one.</li> </ol> <p>See <code>IV</code> (4), <code>IX</code> (9)</p> <p>To summarize, we simply keep adding the value of a roman letter till we see a bigger letter. If we encounter a bigger letter, adjust the value by subtracting 2 times of the previous value from the latter.</p> <p>For example:</p> Roman Numeral Action <code>I</code> +1 <code>II</code> +1, +1 <code>III</code> +1, +1, +1 <code>IV</code> +1, +5, -1 x 2 <code>V</code> +5 <code>VII</code> +5, +1, +1 <code>VIII</code> +5, +1, +1, +1 <code>IX</code> +1, +10, -1 x 2 <code>X</code> +10 <p>Let's check another value <code>XLIX</code> (49)</p> <p><code>XLIX</code> = +10, +50, -10 x 2, +1, +10, -1 x 2 = 49</p> <p>Looking good! But the rules seem to work only if the given roman numeral is legit.</p> <p>We can also conclude that the biggest roman numeral constructed by the aforementioned letters is 3999 as in <code>MMMCMXCIX</code></p>"},{"location":"super-bowl-li/#how-to-write","title":"How to Write","text":"<p>Given a number from 1 to 3999, constructing a legit roman numeral requires:</p> <ol> <li> <p>selecting the maximum roman letter no larger than the number</p> </li> <li> <p>subtracting the value from the number</p> </li> <li> <p>repeat step 1 until number is 0</p> </li> </ol> <p>Let's take 3998 as an example:</p> number roman numeral remaining 3998 M 2998 2998 M 1998 1998 M 998 998 D 498 498 C 398 398 C 298 298 C 198 198 C 98 <p>We know <code>DCCCC</code> is not a legit roman numeral, which should be written as <code>CM</code>.</p> number roman letter remaining 998 CM 98 <p>Similarly,</p> number roman letter remaining 98 XC 8 <p>And finally,</p> number roman letter remaining 8 V 3 3 I 2 2 I 1 1 I 0 <p>Therefore, 3998 is <code>MMMCMXCVIII</code>.</p> <p>Let's look at 4 as another example</p> number roman letter remaining 4 I 3 3 I 2 2 I 1 1 I 0 <p>We know <code>IIII</code> is not a legit roman numeral, which should be written as <code>IV</code>.</p> <p>Hmm... to speed up the conversion, we may include <code>9 x 10 ^ n</code> and <code>4 x 10 ^ n</code> patterns in the matching process.</p>"},{"location":"super-bowl-li/#python-implementation","title":"Python Implementation","text":"<p>See my Python implementation (and test) at the following gist.</p>"},{"location":"super-bowl-li/#the-end","title":"The End","text":"<p>Okay. <code>XXXVIII</code> is 38 and 39 is <code>XXXIX</code></p> <p>If you speak Chinese, you may also find \"SB LI\" hilarious.</p> <p>Thanks for reading.</p>"},{"location":"switching-to-windows/","title":"Switching to Windows","text":"<p>A Windows laptop is not that bad.</p> <p>It has been 2 weeks since I switched my home machine to a Windows laptop. After years of leisure and working experience with macOS and Ubuntu, I find my journey so far with this mid-range Dell Inspiron 5480 is not that bad at all.</p> <ul> <li>Package manager: chocolatery</li> <li>Python version manager: pyenv-win</li> <li>Node.js version manager: nvm-windows</li> </ul> <p>FYI, here is a timeline of my personal laptops.</p>"},{"location":"using-naive-bayes-model-for-language-detection/","title":"Using Naive Bayes Model for Language Detection","text":"<p>How to use one of simplest supervised learning model (Naive Bayes) to perform language detection</p>"},{"location":"using-naive-bayes-model-for-language-detection/#background","title":"Background","text":"<p>Naive Bayes is one of the simple techniques to construct a classifier, which is based on Bayes' rule. It is a supervised learning method and assumes features contribute to classification independently. Such naive generative model sometimes oversimplifies the task but, be that as it may, it is proved to work well in many tasks, including spam email filtering and sentimental analysis.</p> <p>The underlying math is</p> <p>$$ P(A|B) = \\dfrac{P(A) \\cdot P(B|A)} {P(B)} $$</p> <p>or in plain English</p> <p>$$ posterior = \\dfrac{likelihood \\cdot prior} {evidence} $$</p> <p>Let A denote the $$k$$ possible outcomes of classes and B denote a vector of features $$x$$, we have</p> <p>$$ P(C_k|x) = \\dfrac{P(C_k) \\cdot P(x|C_k)} {P(x)} $$</p> <p>Since we assume $$x_i$$ is independent of $$x_j$$, we have</p> <p>$$ P(C_k|x) = \\dfrac{P(C_k) \\cdot \\prod_{i=1}^n P(x_i|C_k)} {P(x)} $$</p> <p>In this way we simplify and cast the classification problem into a counting tasks, i.e. counting the number of occurrences of feature $$x_i$$ in the training instances, given its class is $$C_k$$. When we use the model to predict a testing instance, we compute the probabilities of all classes and take the class that has highest probability as its label.</p> <p>In practice, we can use the log probability to simplify the computation.</p> <p>$$ \\log {P(C_k|x)} = \\log {P(C_k) + \\sum_{i=1}^n \\log {P(x_i|C_k)}} - \\log{P(x)} $$</p>"},{"location":"using-naive-bayes-model-for-language-detection/#task","title":"Task","text":"<p>In this post I will use naive bayes model to train a classifier to detect text language from a corpus that contains different languages.</p>"},{"location":"using-naive-bayes-model-for-language-detection/#dataset","title":"Dataset","text":"<p>I use the Wikicorpus v.1.0 dataset, which is a trilingual corpus in Catalan, Spanish, and English. Each portion contains tens or hundreds of millions words. It should be more than enough for my demo.</p>"},{"location":"using-naive-bayes-model-for-language-detection/#feature-selection","title":"Feature Selection","text":"<p>Each document consists of multiple words. Intuitively we may use words as features. However it requires a large collection for training because if a word is not seen in the training set it is of little use in the testing set. Image you have a document with words that have never occurred in the training set. How can the model handle such case? I think it makes more sense to use the characters as features. In this way, we treat each word as a sequence of characters (ngram) and learn a model from the structure of characters in different languages.</p> <p>The n in ngram represents the sliding window of characters. When n = 1, 2, 3, ngram refers to unigram, bigram, trigram respectively. Take the word \"hello\" for example:</p> token ngram output hello unigram ['h', 'e', 'l', 'l', 'o'] hello bigram ['^h', 'he', 'el', 'll', 'lo', 'o^'] hello trigram ['^^h', '^he', 'hel', 'ell', 'llo', 'lo^', 'o^^']"},{"location":"using-naive-bayes-model-for-language-detection/#implementation","title":"Implementation","text":"<p>Example codes, as well as the downloading script for dataset, can be found on Github. Note that the code is written in Python 2.7.</p>"},{"location":"using-naive-bayes-model-for-language-detection/#preprocessing","title":"Preprocessing","text":"<p>Run the script as follow</p> <pre><code>python extract.py raw.ca raw.en raw.es\n</code></pre> <p>The script above strips the tags, extracts only texts from the raw files, stores them in lists, and saves into different pkl files.</p>"},{"location":"using-naive-bayes-model-for-language-detection/#language-detection","title":"Language Detection","text":"<p>Recall the formula from the first section:</p> <p>$$ \\log {P(C_k|x)} = \\log {P(C_k) + \\sum_{i=1}^n \\log {P(x_i|C_k)}} - \\log{P(x)} $$</p> <p>I will assume the likelihoods of different languages are the same. And evidence is also no difference. Therefore only the following part needs to be computed.</p> <p>$$ \\sum_{i=1}^n {\\log {P(x_i|C_k)}} $$</p> <p>Run the script as follow</p> <pre><code>python language_detect.py\n</code></pre>"},{"location":"using-naive-bayes-model-for-language-detection/#result","title":"Result","text":"<p>I only use 10 documents from each language as training set. Catalan, English, and Spanish documents have 6709, 2437, and 2377 words respectively.</p> <p>\"Hoy es un buen d\u00eda\" and \"avui \u00e9s un bon dia\" are \"today is a good day\" in Spanish and Catalan according to Google Translate. The Unigram model learned from the limited training set fails all three testcases. Bigram and Trigram models both seem working.</p> <p>Later I apply the model and predict on a total number of 19479 documents. The result is promising, even for the unigram model.</p> ngram \"today is a good day\" \"Hoy es un buen d\u00eda\" \"avui \u00e9s un bon dia\" Accuracy on 19479 documents Unigram es en es 0.9461 Bigram en es ca 0.9805 Trigram en es ca 0.9694"},{"location":"using-naive-bayes-model-for-language-detection/#one-more-thing","title":"One More Thing","text":"<p>There is a more comprehensive version of this idea already implemented. See github.com/shuyo/language-detection and its port to Python github.com/Mimino666/langdetect.</p> <p>I made a demo app using the Python port, which is available on https://ez-language-detector.herokuapp.com</p>"},{"location":"what-is-cooking/","title":"What is Cooking?","text":"<p>Predict the type of cuisine based on the ingredients. Demo available at https://ez-cuisine-classifier.herokuapp.com/ https://ez-cuisine-classifier.streamlit.app/</p>","tags":["machine learning","python"]},{"location":"what-is-cooking/#data","title":"Data","text":"<p>The training data is from kaggle's Recipe Ingredients Dataset.</p>","tags":["machine learning","python"]},{"location":"what-is-cooking/#modelling","title":"Modelling","text":"<p>My first take is to use some classifiers out of the box from scikit-learn even without any hyperparameter tuning. The result seems acceptable. Checkout the scikit-learn script.</p> mean accuracy learner 0.716 BernoulliNB 0.619 DecisionTreeClassifier 0.099 DummyClassifier 0.530 ExtraTreeClassifier 0.730 KNeighborsClassifier 0.790 LinearSVC 0.673 MultinomialNB 0.763 PassiveAggressiveClassifier 0.720 Perceptron 0.759 RidgeClassifier 0.777 SGDClassifier 0.775 LogisticRegression 0.197 SVC <p>I have noticed the SVM's <code>rbf</code> kernel does not work with default parameters. Hence I try out a few penalty values and the results are better, shown as follow.</p> mean accuracy learner 0.197 SVC (C=1) 0.489 SVC (C=10) 0.706 SVC (C=100) 0.784 SVC (C=1000)","tags":["machine learning","python"]},{"location":"what-is-cooking/#another-approach-of-modelling","title":"Another approach of modelling","text":"<p>Transfer learning is a trending topic nowadays in machine learning domain. It allows us to take advantage of pre-trained models and fine tune them for another domain/task. This dataset may not be the best case to apply transfer learning practice because the ingredients are not written in natural language. I did it anyway for the sake of demonstration. For simplicity, I choose fast.ai.</p> <p>fast.ai's learning rate finding function is pretty handy. And I only use the 1cycle policy to fit the model. Checkout the language model script.</p>","tags":["machine learning","python"]},{"location":"what-is-cooking/#fine-tune-the-pre-trained-model","title":"Fine tune the pre-trained model","text":"<p>Choosing learning rate 0.</p> epoch train_loss valid_loss accuracy time 0 4.911732 3.926325 0.341775 00:14 <p></p> <p>To train a bit further, choose learning rate (1e-2)/2.</p> epoch train_loss valid_loss accuracy time 0 3.331526 3.207970 0.397344 00:19","tags":["machine learning","python"]},{"location":"what-is-cooking/#apply-the-tuned-model-for-classification","title":"Apply the tuned model for classification","text":"<p>Choosing learning rate 5e-1.</p> epoch train_loss valid_loss accuracy time 0 1.524449 1.477003 0.578630 02:51 <p></p> <p>To train a bit further, choose learning rate 2e-4.</p> epoch train_loss valid_loss accuracy time 0 1.284334 1.164963 0.652546 03:09","tags":["machine learning","python"]},{"location":"what-is-cooking/#explanation","title":"Explanation","text":"<ul> <li> <p>Accuracy being about 40% after fine tuning means that the tuned language model is able to predict the next word based on context 2 out of 5 times.   For example, <code>lm_learner.predict(\"green bell\")</code> would return <code>\"green bell pepper\"</code>.</p> </li> <li> <p>Accuracy being about 65% after fitting for classification means that the classifier is able to predict the correct cuisine based on input ingredients 3 out of 5 times.   For example, <code>clf.predict(\"warp avocado beef\")</code> would return <code>\"southern_us\"</code>.</p> </li> </ul>","tags":["machine learning","python"]},{"location":"what-is-cooking/#demo","title":"Demo","text":"<p>Demo with LinearSVC model is available at https://ez-cuisine-classifier.herokuapp.com/ https://ez-cuisine-classifier.streamlit.app/.</p>","tags":["machine learning","python"]},{"location":"archive/2022/","title":"2022","text":""},{"location":"archive/2020/","title":"2020","text":""},{"location":"archive/2019/","title":"2019","text":""},{"location":"archive/2017/","title":"2017","text":""},{"location":"archive/2016/","title":"2016","text":""},{"location":"archive/2015/","title":"2015","text":""},{"location":"category/fitness/","title":"fitness","text":""},{"location":"category/data-science/","title":"data science","text":""},{"location":"category/python/","title":"python","text":""},{"location":"category/miscellaneous/","title":"miscellaneous","text":""},{"location":"category/qr-code/","title":"qr code","text":""},{"location":"category/endianness/","title":"endianness","text":""},{"location":"category/dynamic-programming/","title":"dynamic programming","text":""},{"location":"category/machine-learning/","title":"machine learning","text":""},{"location":"category/naive-bayes/","title":"naive bayes","text":""},{"location":"category/agile/","title":"agile","text":""},{"location":"category/scrum/","title":"scrum","text":""},{"location":"page/2/","title":"Blog","text":""},{"location":"page/3/","title":"Blog","text":""},{"location":"archive/2016/page/2/","title":"2016","text":""},{"location":"category/agile/page/2/","title":"agile","text":""},{"location":"category/scrum/page/2/","title":"scrum","text":""}]}
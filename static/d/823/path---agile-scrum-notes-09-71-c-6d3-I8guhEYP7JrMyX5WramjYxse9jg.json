{"data":{"site":{"siteMetadata":{"title":"zehengl","author":"Zeheng Li"}},"markdownRemark":{"id":"8f07410d-4395-5d50-a2cb-515b6cf25f87","excerpt":"Principles in monitoring Scrum Projects Ideally, the TEAM should monitor its own progress The manager or Scrum Master should NOT micro- manage The Scrum Master…","html":"<h2>Principles in monitoring Scrum Projects</h2>\n<ul>\n<li>\n<p>Ideally, the TEAM should monitor its own progress</p>\n<ul>\n<li>The manager or Scrum Master should NOT micro- manage</li>\n</ul>\n</li>\n<li>The Scrum Master should try to provide the team visibility so that they can make informed decisions</li>\n<li>\n<p>Common tracking mechanisms in Scrum</p>\n<ul>\n<li>Daily stand-up meetings</li>\n<li>Reviews and retrospectives</li>\n<li>Metrics</li>\n<li>Charts</li>\n<li>Information radiators</li>\n</ul>\n</li>\n</ul>\n<h2>Metrics</h2>\n<ul>\n<li>A metric is a standard for measuring or evaluating something.</li>\n<li>\n<p>A measure is a quantity, a proportion, or a qualitative comparison of some kind.</p>\n<ul>\n<li>Quantity: “There are 25 open defect reports on the application as of today.”</li>\n<li>Proportion: “This week there are 10 percent fewer open defect reports than last week.”</li>\n<li>Qualitative comparison: “The new version of the software is easier to use than the old version.”</li>\n</ul>\n</li>\n<li>\n<p>Types of metrics</p>\n<ul>\n<li>Business</li>\n<li>RTF (Running Tested Features)</li>\n<li>Earned Business Value (EBV)</li>\n<li>Net Present Value (NPV)</li>\n<li>Internal Rate of Return (IRR)</li>\n<li>Return on Investment (ROI)</li>\n<li>Process</li>\n<li>Impediments cleared per iteration</li>\n<li>Impediments &#x26; User stories carried over the next iteration</li>\n<li>User stories done per iteration</li>\n<li>Defects carried over the next iteration</li>\n<li>Team member loading</li>\n<li>Velocity</li>\n<li>Backlog size</li>\n<li>Project Testing</li>\n<li>Acceptance tests per story</li>\n<li>Defects count per story</li>\n<li>Escaped Defects per cycle</li>\n<li>Tests time to run</li>\n<li>Tests run per frequency</li>\n<li>Time to fix tests</li>\n<li>Do’s and Don’ts</li>\n<li>Measure only a few things that matter (just because it can be measured doesn’t mean it is important)</li>\n<li>\n<p>It should be easy to calculate (ideally an automated process)</p>\n<ul>\n<li>If it is too cumbersome, either people won’t do it or it will be incorrect</li>\n</ul>\n</li>\n<li>It should be easy to explain and interpret</li>\n<li>\n<p>It should result in tangible action</p>\n<ul>\n<li>Behavior that you want to encourage OR</li>\n<li>Behavior that you want to discourage</li>\n</ul>\n</li>\n<li>Use metrics to guide action, not for witch-hunts</li>\n<li>In Scrum, team metrics are preferred</li>\n<li>\n<p>Do NOT use metrics for performance appraisals</p>\n<ul>\n<li>It will usually result in perverse incentive to manipulate the number</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Charts in Scrum</h2>\n<ul>\n<li>\n<p>Commonly used charts:</p>\n<ul>\n<li>Burn-down, Burn-up charts</li>\n<li>Cumulative Flow Diagrams</li>\n<li>Progress Charts</li>\n<li>Risk profile graphs</li>\n<li>Others</li>\n</ul>\n</li>\n<li>\n<p>Charts are useful because:</p>\n<ul>\n<li>It indicates trends (trends are more important than absolute numbers)</li>\n<li>It is more “visual” (a picture is worth a thousand words)</li>\n<li>Management loves charts!</li>\n</ul>\n</li>\n</ul>\n<h2>Burn-down chart</h2>\n<p><img src=\"https://upload.wikimedia.org/wikipedia/commons/8/8c/Burn_down_chart.png\" alt=\"Burn-down chart\"></p>\n<h2>Burn-down chart Bar Style</h2>\n<p><img src=\"https://agilewarrior.files.wordpress.com/2013/06/burndown-5-workcomplete.png?w=540\" alt=\"Burn-down chart Bar Style\"></p>\n<h2>Burn-up and Burn-down chart</h2>\n<p><img src=\"https://image.slidesharecdn.com/agile-metrics-v6-100210042200-phpapp01/95/agile-metrics-v6-53-728.jpg?cb=1265775801\" alt=\"Burn-up and Burn-down chart\"></p>\n<h2>Cumulative Flow Diagram</h2>\n<p><img src=\"http://static.kanbantool.com/library/analytics-metrics/cumulative-flow-diagram.jpg\" alt=\"Cumulative Flow Diagram\"></p>\n<h2>Parking Lot Diagram</h2>\n<p><img src=\"http://www.featuredrivendevelopment.com/files/images/img_b4ea12e835ecb80e728192097509a172.preview.png\" alt=\"Parking Lot Diagram\"></p>\n<h2>Escaped defects found</h2>\n<p>Escaped Defects Found counts number of new escaped defects found over period of time (day, week, month).</p>\n<h2>Velocity chart</h2>\n<p><img src=\"https://media.licdn.com/mpr/mpr/AAEAAQAAAAAAAAjHAAAAJDk1YWIxNTRmLWNhOWYtNDViYy05MWVlLTVhYzhlZmY2MmE0YQ.png\" alt=\"Velocity chart\"></p>\n<h2>Progress Chart / Kanban</h2>\n<p><img src=\"http://kanbanblog.com/explained/image/kanban-board-2.png\" alt=\"Progress Chart / Kanban\"></p>\n<h2>Niko Niko Calendar</h2>\n<p><img src=\"https://cdn.slidehunter.com/wp-content/uploads/niko-niko-calendar.png\" alt=\"Niko Niko Calendar\"></p>\n<h2>Information radiators</h2>\n<p>“An information radiator displays information in a place where passers by can see it. With information radiators, the passers by don’t need to ask any question; the information simply hits them as they pass.”</p>\n<ul>\n<li>Invented by Alistair Cockburn</li>\n<li>Team members can view the current state of the project : schedules, tasks, progress, issues</li>\n<li>Scrum teams should use it to make progress (or lack of) visible</li>\n</ul>\n<p><img src=\"https://image.slidesharecdn.com/informationradiators-150601115937-lva1-app6892/95/information-radiators-8-638.jpg?cb=1433160070\" alt=\"Information radiators\"></p>\n<p>Most popular Information radiators are:</p>\n<ul>\n<li>Task Boards</li>\n<li>Big Visible charts (Includes burn down charts)</li>\n<li>Continuous Integration build health Indicators (Including lava lamps and street lights)</li>\n</ul>\n<p><img src=\"https://image.slidesharecdn.com/agileformanagers-by-bhawaninandanprasad-140719151411-phpapp02/95/agile-formanagers-bybhawaninandanprasad-20-638.jpg?cb=1405782921\" alt=\"Information radiators\"></p>\n<p>Effective Information Radiators should be :</p>\n<ul>\n<li><strong>Simple</strong>: Should be Brief and concise.</li>\n<li><strong>Stark</strong>: Should display the progress and expose problems. Errors should not be masked, rather used to improve the work and performance</li>\n<li><strong>Current</strong>: Information displayed should be current</li>\n<li><strong>Transient</strong>: The problems and errors shouldn’t be there on the chart for long; once the problem has been rectified, it should be taken off</li>\n<li><strong>Influential</strong>: Influences the team members and management and empowers the whole team to take decisions</li>\n<li><strong>Highly</strong> visible</li>\n<li><strong>Minimal</strong> in number</li>\n</ul>","frontmatter":{"title":"Agile Scrum Note 09: Monitoring Scrum Projects","date":"January 28, 2016","description":"Tools and techniques to monitoring Scrum projects."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/agile-scrum-notes-09/","previous":{"fields":{"slug":"/agile-scrum-notes-08/"},"frontmatter":{"title":"Agile Scrum Note 08: Estimation"}},"next":{"fields":{"slug":"/agile-scrum-notes-10/"},"frontmatter":{"title":"Agile Scrum Note 10: Advanced Concepts"}}}}
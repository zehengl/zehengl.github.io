{"data":{"site":{"siteMetadata":{"title":"zehengl","author":"Zeheng Li"}},"markdownRemark":{"id":"d39d1055-9465-5d55-af58-a4fadeaf0baa","excerpt":"Background Naive Bayes  is one of the simple techniques to construct a classifier, which is based on Bayes’ rule. It is a supervised learning method and assumes…","html":"<h2>Background</h2>\n<p><em>Naive Bayes</em> is one of the simple techniques to construct a classifier, which is based on Bayes’ rule. It is a supervised learning method and assumes features contribute to classification independently. Such naive generative model sometimes oversimplies the task but, be that as it may, it is proved to work well in many tasks, including spam email filtering and sentimental analysis.</p>\n<p>The underlying math is</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>(</mo><mi>A</mi><mi mathvariant=\"normal\">∣</mi><mi>B</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><mi>A</mi><mo>)</mo><mo>⋅</mo><mi>P</mi><mo>(</mo><mi>B</mi><mi mathvariant=\"normal\">∣</mi><mi>A</mi><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>B</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(A|B) = \\dfrac{P(A) \\cdot P(B|A)} {P(B)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\" style=\"margin-right:0.05017em;\">B</span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">A</span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>or in plain English</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>p</mi><mi>o</mi><mi>s</mi><mi>t</mi><mi>e</mi><mi>r</mi><mi>i</mi><mi>o</mi><mi>r</mi><mo>=</mo><mfrac><mrow><mi>l</mi><mi>i</mi><mi>k</mi><mi>e</mi><mi>l</mi><mi>i</mi><mi>h</mi><mi>o</mi><mi>o</mi><mi>d</mi><mo>⋅</mo><mi>p</mi><mi>r</mi><mi>i</mi><mi>o</mi><mi>r</mi></mrow><mrow><mi>e</mi><mi>v</mi><mi>i</mi><mi>d</mi><mi>e</mi><mi>n</mi><mi>c</mi><mi>e</mi></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">posterior = \\dfrac{likelihood \\cdot prior} {evidence}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.85396em;vertical-align:-0.19444em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">s</span><span class=\"mord mathdefault\">t</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.0574399999999997em;vertical-align:-0.686em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.3714399999999998em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.03588em;\">v</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">d</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\">n</span><span class=\"mord mathdefault\">c</span><span class=\"mord mathdefault\">e</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span><span class=\"mord mathdefault\">e</span><span class=\"mord mathdefault\" style=\"margin-right:0.01968em;\">l</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">h</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\">d</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\">p</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span><span class=\"mord mathdefault\">i</span><span class=\"mord mathdefault\">o</span><span class=\"mord mathdefault\" style=\"margin-right:0.02778em;\">r</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>Let A denote the <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>k</mi></mrow><annotation encoding=\"application/x-tex\">k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.69444em;vertical-align:0em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.03148em;\">k</span></span></span></span> possible outcomes of classes and B denote a vector of features <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>x</mi></mrow><annotation encoding=\"application/x-tex\">x</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.43056em;vertical-align:0em;\"></span><span class=\"mord mathdefault\">x</span></span></span></span>, we have</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo><mo>⋅</mo><mi>P</mi><mo>(</mo><mi>x</mi><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(C_k|x) = \\dfrac{P(C_k) \\cdot P(x|C_k)} {P(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.363em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>Since we assume <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> is independent of <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mi>j</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_j</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.716668em;vertical-align:-0.286108em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.311664em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.05724em;\">j</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.286108em;\"><span></span></span></span></span></span></span></span></span></span>, we have</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>)</mo><mo>=</mo><mfrac><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo><mo>⋅</mo><munderover><mo>∏</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo></mrow><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mfrac></mrow><annotation encoding=\"application/x-tex\">P(C_k|x) = \\dfrac{P(C_k) \\cdot \\prod_{i=1}^n P(x_i|C_k)} {P(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.430002em;vertical-align:-0.936em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.494002em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.6897100000000003em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">⋅</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop\"><span class=\"mop op-symbol small-op\" style=\"position:relative;top:-0.0000050000000000050004em;\">∏</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.804292em;\"><span style=\"top:-2.40029em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.2029em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.29971000000000003em;\"><span></span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.936em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span>\n<p>In this way we simplify and cast the classification problem into a counting tasks, i.e. counting the number of occurences of feature <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>x</mi><mi>i</mi></msub></mrow><annotation encoding=\"application/x-tex\">x_i</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.58056em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span> in the training instances, given its class is <span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><msub><mi>C</mi><mi>k</mi></msub></mrow><annotation encoding=\"application/x-tex\">C_k</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:0.83333em;vertical-align:-0.15em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span></span></span></span>. When we use the model to predict a testing instance, we compute the probabilites of all classes and take the class that has highest probality as its label.</p>\n<p>In practice, we can use the log probality to simplify the computation.</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>)</mo></mrow><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo></mrow></mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\log {P(C_k|x)} = \\log {P(C_k) + \\sum_{i=1}^n \\log {P(x_i|C_k)}} - \\log{P(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></span></span>\n<h2>Task</h2>\n<p>In this post I will use naive bayes model to train a classifier to detect text language from a corpus that contains different languages.</p>\n<h2>Dataset</h2>\n<p>I use the <a href=\"http://www.cs.upc.edu/~nlp/wikicorpus/\">Wikicorpus v.1.0</a> dataset, which is a trilingual corpus in Catalan, Spanish, and English. Each portion contains tens or hundreds of millions words. It should be more than enough for my demo.</p>\n<h2>Feature Selection</h2>\n<p>Each document consists of multiple words. Intuitively we may use words as features. However it requires a large collection for training because if a word is not seen in the training set it is of little use in the testing set. Image you have a document with words that have never occured in the training set. How can the model handle such case? I think it makes more sense to use the characters as features. In this way, we treat each word as a sequence of characters (<strong>ngram</strong>) and learn a model from the structure of characters in different languages.</p>\n<p>The <strong><em>n</em></strong> in ngram represents the sliding window of characters. When n = 1, 2, 3, ngram refers to unigram, bigram, trigram respectively. Take the word “hello” for example:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">hello unigram [&#39;h&#39;, &#39;e&#39;, &#39;l&#39;, &#39;l&#39;, &#39;o&#39;]\nhello bigram [&#39;$h&#39;, &#39;he&#39;, &#39;el&#39;, &#39;ll&#39;, &#39;lo&#39;, &#39;o$&#39;]\nhello trigram [&#39;$$h&#39;, &#39;$he&#39;, &#39;hel&#39;, &#39;ell&#39;, &#39;llo&#39;, &#39;lo$&#39;, &#39;o$$&#39;]</code></pre></div>\n<h2>Implementation</h2>\n<p>Example codes, as well as the downloading script for dataset, can be found on <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7\">Github</a>.</p>\n<p><div id=\"gist41274980\" class=\"gist\">\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-download_corpus-sh\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body px-0 blob-wrapper data type-shell \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-download_corpus-sh-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-download_corpus-sh-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">for</span> <span class=\"pl-smi\">language</span> <span class=\"pl-k\">in</span> ca es en </td>\n      </tr>\n      <tr>\n        <td id=\"file-download_corpus-sh-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-download_corpus-sh-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">do</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-download_corpus-sh-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-download_corpus-sh-LC3\" class=\"blob-code blob-code-inner js-file-line\">    wget http://www.cs.upc.edu/~nlp/wikicorpus/raw.<span class=\"pl-smi\">$language</span>.tgz</td>\n      </tr>\n      <tr>\n        <td id=\"file-download_corpus-sh-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-download_corpus-sh-LC4\" class=\"blob-code blob-code-inner js-file-line\">    mkdir raw.<span class=\"pl-smi\">$language</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-download_corpus-sh-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-download_corpus-sh-LC5\" class=\"blob-code blob-code-inner js-file-line\">    tar -xvf raw.<span class=\"pl-smi\">$language</span>.tgz --directory raw.<span class=\"pl-smi\">$language</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-download_corpus-sh-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-download_corpus-sh-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">done</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7/raw/78006b6448262b7fc6267b8d9f41437e38e8e371/download_corpus.sh\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7#file-download_corpus-sh\">download_corpus.sh</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-extract-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body px-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-extract-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-extract-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from</span> bs4 <span class=\"pl-k\">import</span> BeautifulSoup</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-extract-py-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import</span> glob</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-extract-py-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import</span> argparse</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-extract-py-LC4\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import</span> pickle</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-extract-py-LC5\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from</span> random <span class=\"pl-k\">import</span> seed, randint</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-extract-py-LC6\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-extract-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">seed(<span class=\"pl-c1\">5</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-extract-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-extract-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">parser <span class=\"pl-k\">=</span> argparse.ArgumentParser(</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-extract-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-v\">description</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>Extract documents from wikicorpus V1.0<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-extract-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">parser.add_argument(</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-extract-py-LC12\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>folders<span class=\"pl-pds\">&#39;</span></span>, <span class=\"pl-v\">type</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">str</span>, <span class=\"pl-v\">nargs</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>+<span class=\"pl-pds\">&#39;</span></span>,</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-extract-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-v\">help</span><span class=\"pl-k\">=</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>folder (raw.ca, raw.en, raw.es)<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-extract-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-extract-py-LC15\" class=\"blob-code blob-code-inner js-file-line\">args <span class=\"pl-k\">=</span> parser.parse_args()</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-extract-py-LC16\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>process<span class=\"pl-pds\">&#39;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span> <span class=\"pl-pds\">&#39;</span></span>.join(args.folders)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-extract-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-extract-py-LC18\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">for</span> folder <span class=\"pl-k\">in</span> args.folders:</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-extract-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">    files <span class=\"pl-k\">=</span> glob.glob(folder<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>/*<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-extract-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-extract-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">    ind_train <span class=\"pl-k\">=</span> randint(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">len</span>(files)<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-extract-py-LC22\" class=\"blob-code blob-code-inner js-file-line\">    ind_test <span class=\"pl-k\">=</span> randint(<span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">len</span>(files)<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-extract-py-LC23\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-extract-py-LC24\" class=\"blob-code blob-code-inner js-file-line\">    soup <span class=\"pl-k\">=</span> BeautifulSoup(<span class=\"pl-c1\">open</span>(files[ind_train]).read(), <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>html.parser<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-extract-py-LC25\" class=\"blob-code blob-code-inner js-file-line\">    docs <span class=\"pl-k\">=</span> soup.find_all(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>doc<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-extract-py-LC26\" class=\"blob-code blob-code-inner js-file-line\">    content <span class=\"pl-k\">=</span> []</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-extract-py-LC27\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> doc <span class=\"pl-k\">in</span> docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-extract-py-LC28\" class=\"blob-code blob-code-inner js-file-line\">        content.append(doc.get_text())</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-extract-py-LC29\" class=\"blob-code blob-code-inner js-file-line\">    pickle.dump(content, <span class=\"pl-c1\">open</span>(folder<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>.train.pkl<span class=\"pl-pds\">&#39;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>wb<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-extract-py-LC30\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>use<span class=\"pl-pds\">&#39;</span></span>, files[ind_train], <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>as training set<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-extract-py-LC31\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-extract-py-LC32\" class=\"blob-code blob-code-inner js-file-line\">    soup <span class=\"pl-k\">=</span> BeautifulSoup(<span class=\"pl-c1\">open</span>(files[ind_test]).read(), <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>html.parser<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-extract-py-LC33\" class=\"blob-code blob-code-inner js-file-line\">    docs <span class=\"pl-k\">=</span> soup.find_all(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>doc<span class=\"pl-pds\">&#39;</span></span>)</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-extract-py-LC34\" class=\"blob-code blob-code-inner js-file-line\">    content <span class=\"pl-k\">=</span> []</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-extract-py-LC35\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> doc <span class=\"pl-k\">in</span> docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-extract-py-LC36\" class=\"blob-code blob-code-inner js-file-line\">        content.append(doc.get_text())</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-extract-py-LC37\" class=\"blob-code blob-code-inner js-file-line\">    pickle.dump(content, <span class=\"pl-c1\">open</span>(folder<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>.test.pkl<span class=\"pl-pds\">&#39;</span></span>, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>wb<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-extract-py-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-extract-py-LC38\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>use<span class=\"pl-pds\">&#39;</span></span>, files[ind_test], <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>as testing set<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7/raw/78006b6448262b7fc6267b8d9f41437e38e8e371/extract.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7#file-extract-py\">extract.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n    <div class=\"gist-file\">\n      <div class=\"gist-data\">\n        <div class=\"js-gist-file-update-container js-task-list-container file-box\">\n  <div id=\"file-language_detect-py\" class=\"file\">\n    \n\n  <div itemprop=\"text\" class=\"Box-body px-0 blob-wrapper data type-python \">\n      \n<table class=\"highlight tab-size js-file-line-container\" data-tab-size=\"8\">\n      <tr>\n        <td id=\"file-language_detect-py-L1\" class=\"blob-num js-line-number\" data-line-number=\"1\"></td>\n        <td id=\"file-language_detect-py-LC1\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">import</span> pickle</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L2\" class=\"blob-num js-line-number\" data-line-number=\"2\"></td>\n        <td id=\"file-language_detect-py-LC2\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from</span> collections <span class=\"pl-k\">import</span> defaultdict</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L3\" class=\"blob-num js-line-number\" data-line-number=\"3\"></td>\n        <td id=\"file-language_detect-py-LC3\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">from</span> math <span class=\"pl-k\">import</span> log10</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L4\" class=\"blob-num js-line-number\" data-line-number=\"4\"></td>\n        <td id=\"file-language_detect-py-LC4\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L5\" class=\"blob-num js-line-number\" data-line-number=\"5\"></td>\n        <td id=\"file-language_detect-py-LC5\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L6\" class=\"blob-num js-line-number\" data-line-number=\"6\"></td>\n        <td id=\"file-language_detect-py-LC6\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">ngramize</span>(<span class=\"pl-smi\">word</span>, <span class=\"pl-smi\">n</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L7\" class=\"blob-num js-line-number\" data-line-number=\"7\"></td>\n        <td id=\"file-language_detect-py-LC7\" class=\"blob-code blob-code-inner js-file-line\">    ngram_list <span class=\"pl-k\">=</span> []</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L8\" class=\"blob-num js-line-number\" data-line-number=\"8\"></td>\n        <td id=\"file-language_detect-py-LC8\" class=\"blob-code blob-code-inner js-file-line\">    word <span class=\"pl-k\">=</span> word.lower()</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L9\" class=\"blob-num js-line-number\" data-line-number=\"9\"></td>\n        <td id=\"file-language_detect-py-LC9\" class=\"blob-code blob-code-inner js-file-line\">    word <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>$<span class=\"pl-pds\">&#39;</span></span><span class=\"pl-k\">*</span>(n<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>)<span class=\"pl-k\">+</span>word<span class=\"pl-k\">+</span><span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>$<span class=\"pl-pds\">&#39;</span></span><span class=\"pl-k\">*</span>(n<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>) <span class=\"pl-k\">if</span> n <span class=\"pl-k\">&gt;</span> <span class=\"pl-c1\">1</span> <span class=\"pl-k\">else</span> word</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L10\" class=\"blob-num js-line-number\" data-line-number=\"10\"></td>\n        <td id=\"file-language_detect-py-LC10\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> i <span class=\"pl-k\">in</span> <span class=\"pl-c1\">range</span>(<span class=\"pl-c1\">len</span>(word)<span class=\"pl-k\">-</span>n<span class=\"pl-k\">+</span><span class=\"pl-c1\">1</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L11\" class=\"blob-num js-line-number\" data-line-number=\"11\"></td>\n        <td id=\"file-language_detect-py-LC11\" class=\"blob-code blob-code-inner js-file-line\">        ngram_list.append(word[i:i<span class=\"pl-k\">+</span>n])</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L12\" class=\"blob-num js-line-number\" data-line-number=\"12\"></td>\n        <td id=\"file-language_detect-py-LC12\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> ngram_list</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L13\" class=\"blob-num js-line-number\" data-line-number=\"13\"></td>\n        <td id=\"file-language_detect-py-LC13\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L14\" class=\"blob-num js-line-number\" data-line-number=\"14\"></td>\n        <td id=\"file-language_detect-py-LC14\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L15\" class=\"blob-num js-line-number\" data-line-number=\"15\"></td>\n        <td id=\"file-language_detect-py-LC15\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">tokenize</span>(<span class=\"pl-smi\">doc</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L16\" class=\"blob-num js-line-number\" data-line-number=\"16\"></td>\n        <td id=\"file-language_detect-py-LC16\" class=\"blob-code blob-code-inner js-file-line\">    tokens <span class=\"pl-k\">=</span> doc.split()</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L17\" class=\"blob-num js-line-number\" data-line-number=\"17\"></td>\n        <td id=\"file-language_detect-py-LC17\" class=\"blob-code blob-code-inner js-file-line\">    tokens <span class=\"pl-k\">=</span> [t.lower() <span class=\"pl-k\">for</span> t <span class=\"pl-k\">in</span> tokens]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L18\" class=\"blob-num js-line-number\" data-line-number=\"18\"></td>\n        <td id=\"file-language_detect-py-LC18\" class=\"blob-code blob-code-inner js-file-line\">    tokens <span class=\"pl-k\">=</span> [t <span class=\"pl-k\">for</span> t <span class=\"pl-k\">in</span> tokens <span class=\"pl-k\">if</span> <span class=\"pl-k\">not</span> t.isdigit()]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L19\" class=\"blob-num js-line-number\" data-line-number=\"19\"></td>\n        <td id=\"file-language_detect-py-LC19\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> tokens[:<span class=\"pl-k\">-</span><span class=\"pl-c1\">1</span>]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L20\" class=\"blob-num js-line-number\" data-line-number=\"20\"></td>\n        <td id=\"file-language_detect-py-LC20\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L21\" class=\"blob-num js-line-number\" data-line-number=\"21\"></td>\n        <td id=\"file-language_detect-py-LC21\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L22\" class=\"blob-num js-line-number\" data-line-number=\"22\"></td>\n        <td id=\"file-language_detect-py-LC22\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">train_language_model</span>(<span class=\"pl-smi\">docs</span>, <span class=\"pl-smi\">n</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L23\" class=\"blob-num js-line-number\" data-line-number=\"23\"></td>\n        <td id=\"file-language_detect-py-LC23\" class=\"blob-code blob-code-inner js-file-line\">    language_model, total <span class=\"pl-k\">=</span> defaultdict(<span class=\"pl-c1\">float</span>), <span class=\"pl-c1\">0</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L24\" class=\"blob-num js-line-number\" data-line-number=\"24\"></td>\n        <td id=\"file-language_detect-py-LC24\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> doc <span class=\"pl-k\">in</span> docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L25\" class=\"blob-num js-line-number\" data-line-number=\"25\"></td>\n        <td id=\"file-language_detect-py-LC25\" class=\"blob-code blob-code-inner js-file-line\">        tokens <span class=\"pl-k\">=</span> tokenize(doc)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L26\" class=\"blob-num js-line-number\" data-line-number=\"26\"></td>\n        <td id=\"file-language_detect-py-LC26\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for</span> word <span class=\"pl-k\">in</span> tokens:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L27\" class=\"blob-num js-line-number\" data-line-number=\"27\"></td>\n        <td id=\"file-language_detect-py-LC27\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">for</span> ngram <span class=\"pl-k\">in</span> ngramize(word, n):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L28\" class=\"blob-num js-line-number\" data-line-number=\"28\"></td>\n        <td id=\"file-language_detect-py-LC28\" class=\"blob-code blob-code-inner js-file-line\">                language_model[ngram] <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L29\" class=\"blob-num js-line-number\" data-line-number=\"29\"></td>\n        <td id=\"file-language_detect-py-LC29\" class=\"blob-code blob-code-inner js-file-line\">                total <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L30\" class=\"blob-num js-line-number\" data-line-number=\"30\"></td>\n        <td id=\"file-language_detect-py-LC30\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> key <span class=\"pl-k\">in</span> language_model:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L31\" class=\"blob-num js-line-number\" data-line-number=\"31\"></td>\n        <td id=\"file-language_detect-py-LC31\" class=\"blob-code blob-code-inner js-file-line\">        language_model[key] <span class=\"pl-k\">=</span> (language_model[key] <span class=\"pl-k\">+</span> <span class=\"pl-c1\">1</span>) <span class=\"pl-k\">/</span> total</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L32\" class=\"blob-num js-line-number\" data-line-number=\"32\"></td>\n        <td id=\"file-language_detect-py-LC32\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> (language_model, total)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L33\" class=\"blob-num js-line-number\" data-line-number=\"33\"></td>\n        <td id=\"file-language_detect-py-LC33\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L34\" class=\"blob-num js-line-number\" data-line-number=\"34\"></td>\n        <td id=\"file-language_detect-py-LC34\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L35\" class=\"blob-num js-line-number\" data-line-number=\"35\"></td>\n        <td id=\"file-language_detect-py-LC35\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">train</span>(<span class=\"pl-smi\">language_docs</span>, <span class=\"pl-smi\">n</span><span class=\"pl-k\">=</span><span class=\"pl-c1\">1</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L36\" class=\"blob-num js-line-number\" data-line-number=\"36\"></td>\n        <td id=\"file-language_detect-py-LC36\" class=\"blob-code blob-code-inner js-file-line\">    model <span class=\"pl-k\">=</span> {}</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L37\" class=\"blob-num js-line-number\" data-line-number=\"37\"></td>\n        <td id=\"file-language_detect-py-LC37\" class=\"blob-code blob-code-inner js-file-line\">    model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>language<span class=\"pl-pds\">&#39;</span></span>] <span class=\"pl-k\">=</span> {}</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L38\" class=\"blob-num js-line-number\" data-line-number=\"38\"></td>\n        <td id=\"file-language_detect-py-LC38\" class=\"blob-code blob-code-inner js-file-line\">    model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>ngram<span class=\"pl-pds\">&#39;</span></span>] <span class=\"pl-k\">=</span> n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L39\" class=\"blob-num js-line-number\" data-line-number=\"39\"></td>\n        <td id=\"file-language_detect-py-LC39\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> l <span class=\"pl-k\">in</span> language_docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L40\" class=\"blob-num js-line-number\" data-line-number=\"40\"></td>\n        <td id=\"file-language_detect-py-LC40\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>learning<span class=\"pl-pds\">&#39;</span></span>, l, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>model:<span class=\"pl-pds\">&#39;</span></span>,</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L41\" class=\"blob-num js-line-number\" data-line-number=\"41\"></td>\n        <td id=\"file-language_detect-py-LC41\" class=\"blob-code blob-code-inner js-file-line\">        docs <span class=\"pl-k\">=</span> language_docs[l]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L42\" class=\"blob-num js-line-number\" data-line-number=\"42\"></td>\n        <td id=\"file-language_detect-py-LC42\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print</span> <span class=\"pl-c1\">len</span>(docs), <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>docs<span class=\"pl-pds\">&#39;</span></span>, <span class=\"pl-c1\">sum</span>([<span class=\"pl-c1\">len</span>(d.split()) <span class=\"pl-k\">for</span> d <span class=\"pl-k\">in</span> docs]), <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>tokens<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L43\" class=\"blob-num js-line-number\" data-line-number=\"43\"></td>\n        <td id=\"file-language_detect-py-LC43\" class=\"blob-code blob-code-inner js-file-line\">        model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>language<span class=\"pl-pds\">&#39;</span></span>][l] <span class=\"pl-k\">=</span> train_language_model(docs, n)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L44\" class=\"blob-num js-line-number\" data-line-number=\"44\"></td>\n        <td id=\"file-language_detect-py-LC44\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> model</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L45\" class=\"blob-num js-line-number\" data-line-number=\"45\"></td>\n        <td id=\"file-language_detect-py-LC45\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L46\" class=\"blob-num js-line-number\" data-line-number=\"46\"></td>\n        <td id=\"file-language_detect-py-LC46\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L47\" class=\"blob-num js-line-number\" data-line-number=\"47\"></td>\n        <td id=\"file-language_detect-py-LC47\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">predict</span>(<span class=\"pl-smi\">doc</span>, <span class=\"pl-smi\">model</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L48\" class=\"blob-num js-line-number\" data-line-number=\"48\"></td>\n        <td id=\"file-language_detect-py-LC48\" class=\"blob-code blob-code-inner js-file-line\">    n <span class=\"pl-k\">=</span> model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>ngram<span class=\"pl-pds\">&#39;</span></span>]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L49\" class=\"blob-num js-line-number\" data-line-number=\"49\"></td>\n        <td id=\"file-language_detect-py-LC49\" class=\"blob-code blob-code-inner js-file-line\">    languages <span class=\"pl-k\">=</span> model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>language<span class=\"pl-pds\">&#39;</span></span>].keys()</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L50\" class=\"blob-num js-line-number\" data-line-number=\"50\"></td>\n        <td id=\"file-language_detect-py-LC50\" class=\"blob-code blob-code-inner js-file-line\">    preds <span class=\"pl-k\">=</span> []</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L51\" class=\"blob-num js-line-number\" data-line-number=\"51\"></td>\n        <td id=\"file-language_detect-py-LC51\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> l <span class=\"pl-k\">in</span> languages:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L52\" class=\"blob-num js-line-number\" data-line-number=\"52\"></td>\n        <td id=\"file-language_detect-py-LC52\" class=\"blob-code blob-code-inner js-file-line\">        language_model, total <span class=\"pl-k\">=</span> model[<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>language<span class=\"pl-pds\">&#39;</span></span>][l]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L53\" class=\"blob-num js-line-number\" data-line-number=\"53\"></td>\n        <td id=\"file-language_detect-py-LC53\" class=\"blob-code blob-code-inner js-file-line\">        pred <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>.</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L54\" class=\"blob-num js-line-number\" data-line-number=\"54\"></td>\n        <td id=\"file-language_detect-py-LC54\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for</span> word <span class=\"pl-k\">in</span> tokenize(doc):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L55\" class=\"blob-num js-line-number\" data-line-number=\"55\"></td>\n        <td id=\"file-language_detect-py-LC55\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">for</span> ngram <span class=\"pl-k\">in</span> ngramize(word, n):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L56\" class=\"blob-num js-line-number\" data-line-number=\"56\"></td>\n        <td id=\"file-language_detect-py-LC56\" class=\"blob-code blob-code-inner js-file-line\">                weight <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>.</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L57\" class=\"blob-num js-line-number\" data-line-number=\"57\"></td>\n        <td id=\"file-language_detect-py-LC57\" class=\"blob-code blob-code-inner js-file-line\">                <span class=\"pl-k\">if</span> ngram <span class=\"pl-k\">in</span> language_model:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L58\" class=\"blob-num js-line-number\" data-line-number=\"58\"></td>\n        <td id=\"file-language_detect-py-LC58\" class=\"blob-code blob-code-inner js-file-line\">                    weight <span class=\"pl-k\">*=</span> language_model[ngram]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L59\" class=\"blob-num js-line-number\" data-line-number=\"59\"></td>\n        <td id=\"file-language_detect-py-LC59\" class=\"blob-code blob-code-inner js-file-line\">                <span class=\"pl-k\">else</span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L60\" class=\"blob-num js-line-number\" data-line-number=\"60\"></td>\n        <td id=\"file-language_detect-py-LC60\" class=\"blob-code blob-code-inner js-file-line\">                    weight <span class=\"pl-k\">=</span> <span class=\"pl-c1\">1</span>. <span class=\"pl-k\">/</span> total</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L61\" class=\"blob-num js-line-number\" data-line-number=\"61\"></td>\n        <td id=\"file-language_detect-py-LC61\" class=\"blob-code blob-code-inner js-file-line\">                pred <span class=\"pl-k\">+=</span> log10(weight)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L62\" class=\"blob-num js-line-number\" data-line-number=\"62\"></td>\n        <td id=\"file-language_detect-py-LC62\" class=\"blob-code blob-code-inner js-file-line\">        preds.append(pred)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L63\" class=\"blob-num js-line-number\" data-line-number=\"63\"></td>\n        <td id=\"file-language_detect-py-LC63\" class=\"blob-code blob-code-inner js-file-line\">    max_ind <span class=\"pl-k\">=</span> preds.index(<span class=\"pl-c1\">max</span>(preds))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L64\" class=\"blob-num js-line-number\" data-line-number=\"64\"></td>\n        <td id=\"file-language_detect-py-LC64\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">return</span> languages[max_ind]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L65\" class=\"blob-num js-line-number\" data-line-number=\"65\"></td>\n        <td id=\"file-language_detect-py-LC65\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L66\" class=\"blob-num js-line-number\" data-line-number=\"66\"></td>\n        <td id=\"file-language_detect-py-LC66\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L67\" class=\"blob-num js-line-number\" data-line-number=\"67\"></td>\n        <td id=\"file-language_detect-py-LC67\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">test</span>(<span class=\"pl-smi\">language_docs</span>, <span class=\"pl-smi\">model</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L68\" class=\"blob-num js-line-number\" data-line-number=\"68\"></td>\n        <td id=\"file-language_detect-py-LC68\" class=\"blob-code blob-code-inner js-file-line\">    error, length <span class=\"pl-k\">=</span> <span class=\"pl-c1\">0</span>, <span class=\"pl-c1\">0</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L69\" class=\"blob-num js-line-number\" data-line-number=\"69\"></td>\n        <td id=\"file-language_detect-py-LC69\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> l <span class=\"pl-k\">in</span> language_docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L70\" class=\"blob-num js-line-number\" data-line-number=\"70\"></td>\n        <td id=\"file-language_detect-py-LC70\" class=\"blob-code blob-code-inner js-file-line\">        docs <span class=\"pl-k\">=</span> language_docs[l]</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L71\" class=\"blob-num js-line-number\" data-line-number=\"71\"></td>\n        <td id=\"file-language_detect-py-LC71\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-k\">for</span> doc <span class=\"pl-k\">in</span> docs:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L72\" class=\"blob-num js-line-number\" data-line-number=\"72\"></td>\n        <td id=\"file-language_detect-py-LC72\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-c1\">print</span> predict(doc, model), l</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L73\" class=\"blob-num js-line-number\" data-line-number=\"73\"></td>\n        <td id=\"file-language_detect-py-LC73\" class=\"blob-code blob-code-inner js-file-line\">            <span class=\"pl-k\">if</span> predict(doc, model) <span class=\"pl-k\">!=</span> l:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L74\" class=\"blob-num js-line-number\" data-line-number=\"74\"></td>\n        <td id=\"file-language_detect-py-LC74\" class=\"blob-code blob-code-inner js-file-line\">                error <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L75\" class=\"blob-num js-line-number\" data-line-number=\"75\"></td>\n        <td id=\"file-language_detect-py-LC75\" class=\"blob-code blob-code-inner js-file-line\">            length <span class=\"pl-k\">+=</span> <span class=\"pl-c1\">1</span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L76\" class=\"blob-num js-line-number\" data-line-number=\"76\"></td>\n        <td id=\"file-language_detect-py-LC76\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>Testing on <span class=\"pl-c1\">%d</span> instances<span class=\"pl-cce\">\\n</span>Accuracy=<span class=\"pl-c1\">%.4f</span><span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-k\">%</span> (</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L77\" class=\"blob-num js-line-number\" data-line-number=\"77\"></td>\n        <td id=\"file-language_detect-py-LC77\" class=\"blob-code blob-code-inner js-file-line\">        length, <span class=\"pl-c1\">1</span> <span class=\"pl-k\">-</span> <span class=\"pl-c1\">float</span>(error) <span class=\"pl-k\">/</span> length)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L78\" class=\"blob-num js-line-number\" data-line-number=\"78\"></td>\n        <td id=\"file-language_detect-py-LC78\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L79\" class=\"blob-num js-line-number\" data-line-number=\"79\"></td>\n        <td id=\"file-language_detect-py-LC79\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L80\" class=\"blob-num js-line-number\" data-line-number=\"80\"></td>\n        <td id=\"file-language_detect-py-LC80\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">def</span> <span class=\"pl-en\">testcase</span>(<span class=\"pl-smi\">ngram_size</span>):</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L81\" class=\"blob-num js-line-number\" data-line-number=\"81\"></td>\n        <td id=\"file-language_detect-py-LC81\" class=\"blob-code blob-code-inner js-file-line\">    en_train <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.en.train.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L82\" class=\"blob-num js-line-number\" data-line-number=\"82\"></td>\n        <td id=\"file-language_detect-py-LC82\" class=\"blob-code blob-code-inner js-file-line\">    en_test <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.en.test.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L83\" class=\"blob-num js-line-number\" data-line-number=\"83\"></td>\n        <td id=\"file-language_detect-py-LC83\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L84\" class=\"blob-num js-line-number\" data-line-number=\"84\"></td>\n        <td id=\"file-language_detect-py-LC84\" class=\"blob-code blob-code-inner js-file-line\">    es_train <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.es.train.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L85\" class=\"blob-num js-line-number\" data-line-number=\"85\"></td>\n        <td id=\"file-language_detect-py-LC85\" class=\"blob-code blob-code-inner js-file-line\">    es_test <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.es.test.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L86\" class=\"blob-num js-line-number\" data-line-number=\"86\"></td>\n        <td id=\"file-language_detect-py-LC86\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L87\" class=\"blob-num js-line-number\" data-line-number=\"87\"></td>\n        <td id=\"file-language_detect-py-LC87\" class=\"blob-code blob-code-inner js-file-line\">    ca_train <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.ca.train.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L88\" class=\"blob-num js-line-number\" data-line-number=\"88\"></td>\n        <td id=\"file-language_detect-py-LC88\" class=\"blob-code blob-code-inner js-file-line\">    ca_test <span class=\"pl-k\">=</span> pickle.load(<span class=\"pl-c1\">open</span>(<span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>raw.ca.test.pkl<span class=\"pl-pds\">&#39;</span></span>))</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L89\" class=\"blob-num js-line-number\" data-line-number=\"89\"></td>\n        <td id=\"file-language_detect-py-LC89\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L90\" class=\"blob-num js-line-number\" data-line-number=\"90\"></td>\n        <td id=\"file-language_detect-py-LC90\" class=\"blob-code blob-code-inner js-file-line\">    training_language_docs <span class=\"pl-k\">=</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L91\" class=\"blob-num js-line-number\" data-line-number=\"91\"></td>\n        <td id=\"file-language_detect-py-LC91\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>en<span class=\"pl-pds\">&#39;</span></span>: en_train[:<span class=\"pl-c1\">10</span>],</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L92\" class=\"blob-num js-line-number\" data-line-number=\"92\"></td>\n        <td id=\"file-language_detect-py-LC92\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>es<span class=\"pl-pds\">&#39;</span></span>: es_train[:<span class=\"pl-c1\">10</span>],</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L93\" class=\"blob-num js-line-number\" data-line-number=\"93\"></td>\n        <td id=\"file-language_detect-py-LC93\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>ca<span class=\"pl-pds\">&#39;</span></span>: ca_train[:<span class=\"pl-c1\">10</span>],</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L94\" class=\"blob-num js-line-number\" data-line-number=\"94\"></td>\n        <td id=\"file-language_detect-py-LC94\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L95\" class=\"blob-num js-line-number\" data-line-number=\"95\"></td>\n        <td id=\"file-language_detect-py-LC95\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L96\" class=\"blob-num js-line-number\" data-line-number=\"96\"></td>\n        <td id=\"file-language_detect-py-LC96\" class=\"blob-code blob-code-inner js-file-line\">    model <span class=\"pl-k\">=</span> train(training_language_docs, ngram_size)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L97\" class=\"blob-num js-line-number\" data-line-number=\"97\"></td>\n        <td id=\"file-language_detect-py-LC97\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L98\" class=\"blob-num js-line-number\" data-line-number=\"98\"></td>\n        <td id=\"file-language_detect-py-LC98\" class=\"blob-code blob-code-inner js-file-line\">    test_str <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>today is a good day<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L99\" class=\"blob-num js-line-number\" data-line-number=\"99\"></td>\n        <td id=\"file-language_detect-py-LC99\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-k\">%</span> test_str, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>is<span class=\"pl-pds\">&#39;</span></span>, predict(test_str, model)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L100\" class=\"blob-num js-line-number\" data-line-number=\"100\"></td>\n        <td id=\"file-language_detect-py-LC100\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L101\" class=\"blob-num js-line-number\" data-line-number=\"101\"></td>\n        <td id=\"file-language_detect-py-LC101\" class=\"blob-code blob-code-inner js-file-line\">    test_str <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>Hoy es un buen día<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L102\" class=\"blob-num js-line-number\" data-line-number=\"102\"></td>\n        <td id=\"file-language_detect-py-LC102\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-k\">%</span> test_str, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>is<span class=\"pl-pds\">&#39;</span></span>, predict(test_str, model)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L103\" class=\"blob-num js-line-number\" data-line-number=\"103\"></td>\n        <td id=\"file-language_detect-py-LC103\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L104\" class=\"blob-num js-line-number\" data-line-number=\"104\"></td>\n        <td id=\"file-language_detect-py-LC104\" class=\"blob-code blob-code-inner js-file-line\">    test_str <span class=\"pl-k\">=</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>avui és un bon dia<span class=\"pl-pds\">&#39;</span></span></td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L105\" class=\"blob-num js-line-number\" data-line-number=\"105\"></td>\n        <td id=\"file-language_detect-py-LC105\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-c1\">%s</span><span class=\"pl-cce\">\\&quot;</span><span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-k\">%</span> test_str, <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>is<span class=\"pl-pds\">&#39;</span></span>, predict(test_str, model)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L106\" class=\"blob-num js-line-number\" data-line-number=\"106\"></td>\n        <td id=\"file-language_detect-py-LC106\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L107\" class=\"blob-num js-line-number\" data-line-number=\"107\"></td>\n        <td id=\"file-language_detect-py-LC107\" class=\"blob-code blob-code-inner js-file-line\">    testing_language_docs <span class=\"pl-k\">=</span> {</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L108\" class=\"blob-num js-line-number\" data-line-number=\"108\"></td>\n        <td id=\"file-language_detect-py-LC108\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>en<span class=\"pl-pds\">&#39;</span></span>: en_test,</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L109\" class=\"blob-num js-line-number\" data-line-number=\"109\"></td>\n        <td id=\"file-language_detect-py-LC109\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>es<span class=\"pl-pds\">&#39;</span></span>: es_test,</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L110\" class=\"blob-num js-line-number\" data-line-number=\"110\"></td>\n        <td id=\"file-language_detect-py-LC110\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>ca<span class=\"pl-pds\">&#39;</span></span>: ca_test,</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L111\" class=\"blob-num js-line-number\" data-line-number=\"111\"></td>\n        <td id=\"file-language_detect-py-LC111\" class=\"blob-code blob-code-inner js-file-line\">    }</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L112\" class=\"blob-num js-line-number\" data-line-number=\"112\"></td>\n        <td id=\"file-language_detect-py-LC112\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L113\" class=\"blob-num js-line-number\" data-line-number=\"113\"></td>\n        <td id=\"file-language_detect-py-LC113\" class=\"blob-code blob-code-inner js-file-line\">    test(testing_language_docs, model)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L114\" class=\"blob-num js-line-number\" data-line-number=\"114\"></td>\n        <td id=\"file-language_detect-py-LC114\" class=\"blob-code blob-code-inner js-file-line\">\n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L115\" class=\"blob-num js-line-number\" data-line-number=\"115\"></td>\n        <td id=\"file-language_detect-py-LC115\" class=\"blob-code blob-code-inner js-file-line\"><span class=\"pl-k\">if</span> <span class=\"pl-c1\">__name__</span> <span class=\"pl-k\">==</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>__main__<span class=\"pl-pds\">&#39;</span></span>:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L116\" class=\"blob-num js-line-number\" data-line-number=\"116\"></td>\n        <td id=\"file-language_detect-py-LC116\" class=\"blob-code blob-code-inner js-file-line\">    <span class=\"pl-k\">for</span> n <span class=\"pl-k\">in</span> [<span class=\"pl-c1\">1</span>, <span class=\"pl-c1\">2</span>, <span class=\"pl-c1\">3</span>]:</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L117\" class=\"blob-num js-line-number\" data-line-number=\"117\"></td>\n        <td id=\"file-language_detect-py-LC117\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>When ngram = <span class=\"pl-c1\">%d</span><span class=\"pl-pds\">&#39;</span></span> <span class=\"pl-k\">%</span> n</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L118\" class=\"blob-num js-line-number\" data-line-number=\"118\"></td>\n        <td id=\"file-language_detect-py-LC118\" class=\"blob-code blob-code-inner js-file-line\">        testcase(n)</td>\n      </tr>\n      <tr>\n        <td id=\"file-language_detect-py-L119\" class=\"blob-num js-line-number\" data-line-number=\"119\"></td>\n        <td id=\"file-language_detect-py-LC119\" class=\"blob-code blob-code-inner js-file-line\">        <span class=\"pl-c1\">print</span> <span class=\"pl-s\"><span class=\"pl-pds\">&#39;</span>-<span class=\"pl-pds\">&#39;</span></span><span class=\"pl-k\">*</span><span class=\"pl-c1\">20</span></td>\n      </tr>\n</table>\n\n\n  </div>\n\n  </div>\n</div>\n\n      </div>\n      <div class=\"gist-meta\">\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7/raw/78006b6448262b7fc6267b8d9f41437e38e8e371/language_detect.py\" style=\"float:right\">view raw</a>\n        <a href=\"https://gist.github.com/zehengl/1ed4701239fa848c42007e13a23d72a7#file-language_detect-py\">language_detect.py</a>\n        hosted with &#10084; by <a href=\"https://github.com\">GitHub</a>\n      </div>\n    </div>\n</div></p>\n<h3>Preprocessing</h3>\n<p>Run the script as follow</p>\n<p>{% highlight bash %}\npython extract.py raw.ca raw.en raw.es\n{% endhighlight %}</p>\n<p>The script above strips the tags, extracts only texts from the raw files, stores them in lists, and saves into different pkl files.</p>\n<h3>Language Dectection</h3>\n<p>Recall the formula from the first section:</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mi mathvariant=\"normal\">∣</mi><mi>x</mi><mo>)</mo></mrow><mo>=</mo><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo><mo>+</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo></mrow></mrow><mo>−</mo><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><mi>x</mi><mo>)</mo></mrow></mrow><annotation encoding=\"application/x-tex\">\\log {P(C_k|x)} = \\log {P(C_k) + \\sum_{i=1}^n \\log {P(x_i|C_k)}} - \\log{P(x)}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span><span class=\"mrel\">=</span><span class=\"mspace\" style=\"margin-right:0.2777777777777778em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">+</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222222222222222em;\"></span></span><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord mathdefault\">x</span><span class=\"mclose\">)</span></span></span></span></span></span>\n<p>I will assume the likelihoods of different languages are the same. And evidence is also no difference. Therefore only the following part needs to be computed.</p>\n<span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math><semantics><mrow><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><mrow><mi>log</mi><mo>⁡</mo><mrow><mi>P</mi><mo>(</mo><msub><mi>x</mi><mi>i</mi></msub><mi mathvariant=\"normal\">∣</mi><msub><mi>C</mi><mi>k</mi></msub><mo>)</mo></mrow></mrow></mrow><annotation encoding=\"application/x-tex\">\\sum_{i=1}^n {\\log {P(x_i|C_k)}}</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.929066em;vertical-align:-1.277669em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6513970000000002em;\"><span style=\"top:-1.872331em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathdefault mtight\">i</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.050005em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3000050000000005em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">n</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.277669em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mop\">lo<span style=\"margin-right:0.01389em;\">g</span></span><span class=\"mspace\" style=\"margin-right:0.16666666666666666em;\"></span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.13889em;\">P</span><span class=\"mopen\">(</span><span class=\"mord\"><span class=\"mord mathdefault\">x</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.31166399999999994em;\"><span style=\"top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\">i</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mord\">∣</span><span class=\"mord\"><span class=\"mord mathdefault\" style=\"margin-right:0.07153em;\">C</span><span class=\"msupsub\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.33610799999999996em;\"><span style=\"top:-2.5500000000000003em;margin-left:-0.07153em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathdefault mtight\" style=\"margin-right:0.03148em;\">k</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.15em;\"><span></span></span></span></span></span></span><span class=\"mclose\">)</span></span></span></span></span></span></span>\n<p>Run the script as follow</p>\n<p>{% highlight bash %}\npython language_detect.py\n{% endhighlight %}</p>\n<h2>Result</h2>\n<p>I only use <strong>10</strong> documents from each language as training set. Catalan, English, and Spanish documents have 6709, 2437, and 2377 words respectively.</p>\n<p>“Hoy es un buen día” and “avui és un bon dia” are “today is a good day” in Spanish and Catalan according to <a href=\"https://translate.google.ca/\">Google Translate</a>. The Unigram model learned from the limited training set fails all three testcaes. Bigram and Trigram models both seem working.</p>\n<p>Later I apply the model and predict on a total number of 19479 documents. The result is promising, even for the unigram model.</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">ngram</th>\n<th align=\"center\">“today is a good day”</th>\n<th align=\"center\">“Hoy es un buen día”</th>\n<th align=\"center\">“avui és un bon dia”</th>\n<th align=\"center\">Accuracy on 19479 documents</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">Unigram</td>\n<td align=\"center\">es</td>\n<td align=\"center\">en</td>\n<td align=\"center\">es</td>\n<td align=\"center\">0.9461</td>\n</tr>\n<tr>\n<td align=\"center\">Bigram</td>\n<td align=\"center\">en</td>\n<td align=\"center\">es</td>\n<td align=\"center\">ca</td>\n<td align=\"center\">0.9805</td>\n</tr>\n<tr>\n<td align=\"center\">Trigram</td>\n<td align=\"center\">en</td>\n<td align=\"center\">es</td>\n<td align=\"center\">ca</td>\n<td align=\"center\">0.9694</td>\n</tr>\n</tbody>\n</table>","frontmatter":{"title":"Using Naive Bayes Model for Language Dectection","date":"2016-05-07","description":"How to use one of simplest supervised learning model (Naive Bayes) to perform language detection."}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/using-naive-bayes-model-for-language-detection/","previous":{"fields":{"slug":"/agile-scrum-simulation-test/"},"frontmatter":{"title":"Agile Scrum Simulation Test"}},"next":{"fields":{"slug":"/dynamic-programming-examples/"},"frontmatter":{"title":"Dynamic Programming Examples"}}}}